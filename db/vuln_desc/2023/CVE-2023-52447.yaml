configurations:
- nodes:
  - cpeMatch:
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: A5880D00-FD69-4D01-84E4-36FCC5B578C4
      versionEndExcluding: 5.10.214
      versionStartIncluding: 5.9.0
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: ACB69438-845D-4E3C-B114-3140611F9C0B
      versionEndExcluding: 5.15.153
      versionStartIncluding: '5.11'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 070D0ED3-90D0-4F95-B1FF-57D7F46F332D
      versionEndExcluding: 6.1.75
      versionStartIncluding: '5.16'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 5C6B50A6-3D8B-4CE2-BDCC-A098609CBA14
      versionEndExcluding: 6.6.14
      versionStartIncluding: '6.2'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 7229C448-E0C9-488B-8939-36BA5254065E
      versionEndExcluding: 6.7.2
      versionStartIncluding: '6.7'
      vulnerable: true
    negate: false
    operator: OR
cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    bpf: Defer the free of inner map when necessary


    When updating or deleting an inner map in map array or map htab, the map

    may still be accessed by non-sleepable program or sleepable program.

    However bpf_map_fd_put_ptr() decreases the ref-counter of the inner map

    directly through bpf_map_put(), if the ref-counter is the last one

    (which is true for most cases), the inner map will be freed by

    ops->map_free() in a kworker. But for now, most .map_free() callbacks

    don''t use synchronize_rcu() or its variants to wait for the elapse of a

    RCU grace period, so after the invocation of ops->map_free completes,

    the bpf program which is accessing the inner map may incur

    use-after-free problem.


    Fix the free of inner map by invoking bpf_map_free_deferred() after both

    one RCU grace period and one tasks trace RCU grace period if the inner

    map has been removed from the outer map before. The deferment is

    accomplished by using call_rcu() or call_rcu_tasks_trace() when

    releasing the last ref-counter of bpf map. The newly-added rcu_head

    field in bpf_map shares the same storage space with work field to

    reduce the size of bpf_map.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bpf:\
    \ posponer la liberaci\xF3n del mapa interno cuando sea necesario Al actualizar\
    \ o eliminar un mapa interno en la matriz de mapas o en el htab de mapas, a\xFA\
    n se puede acceder al mapa mediante un programa que no se puede dormir o un programa\
    \ que se puede dormir. . Sin embargo, bpf_map_fd_put_ptr() disminuye el contador\
    \ de referencias del mapa interno directamente a trav\xE9s de bpf_map_put(), si\
    \ el contador de referencias es el \xFAltimo (lo cual es cierto en la mayor\xED\
    a de los casos), el mapa interno ser\xE1 liberado por ops-&gt;map_free() en un\
    \ kworker. Pero por ahora, la mayor\xEDa de las devoluciones de llamada .map_free()\
    \ no usan sincronizar_rcu() o sus variantes para esperar a que transcurra el per\xED\
    odo de gracia de RCU, por lo que despu\xE9s de que se completa la invocaci\xF3\
    n de ops-&gt;map_free, el programa bpf que accede al interior El mapa puede sufrir\
    \ un problema de uso despu\xE9s de su liberaci\xF3n. Corrija la liberaci\xF3n\
    \ del mapa interno invocando bpf_map_free_deferred() despu\xE9s de un per\xED\
    odo de gracia de RCU y un per\xEDodo de gracia de seguimiento de tareas de RCU\
    \ si el mapa interno se elimin\xF3 del mapa externo antes. El aplazamiento se\
    \ logra utilizando call_rcu() o call_rcu_tasks_trace() al liberar el \xFAltimo\
    \ contador de referencia del mapa bpf. El campo rcu_head reci\xE9n agregado en\
    \ bpf_map comparte el mismo espacio de almacenamiento con el campo de trabajo\
    \ para reducir el tama\xF1o de bpf_map."
id: CVE-2023-52447
lastModified: '2024-08-26T16:06:09.770'
metrics:
  cvssMetricV31:
  - cvssData:
      attackComplexity: LOW
      attackVector: LOCAL
      availabilityImpact: HIGH
      baseScore: 7.8
      baseSeverity: HIGH
      confidentialityImpact: HIGH
      integrityImpact: HIGH
      privilegesRequired: LOW
      scope: UNCHANGED
      userInteraction: NONE
      vectorString: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
      version: '3.1'
    exploitabilityScore: 1.8
    impactScore: 5.9
    source: nvd@nist.gov
    type: Primary
published: '2024-02-22T17:15:08.580'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/37d98fb9c3144c0fddf7f6e99aece9927ac8dce6
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/62fca83303d608ad4fec3f7428c8685680bb01b0
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/876673364161da50eed6b472d746ef88242b2368
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/90c445799fd1dc214d7c6279c144e33a35e29ef2
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/bfd9b20c4862f41d4590fde11d70a5eeae53dcc5
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/f91cd728b10c51f6d4a39957ccd56d1e802fc8ee
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Mailing List
  - Third Party Advisory
  url: https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Analyzed
weaknesses:
- description:
  - lang: en
    value: CWE-416
  source: nvd@nist.gov
  type: Primary
