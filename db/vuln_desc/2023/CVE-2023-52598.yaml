descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    s390/ptrace: handle setting of fpc register correctly


    If the content of the floating point control (fpc) register of a traced

    process is modified with the ptrace interface the new value is tested for

    validity by temporarily loading it into the fpc register.


    This may lead to corruption of the fpc register of the tracing process:

    if an interrupt happens while the value is temporarily loaded into the

    fpc register, and within interrupt context floating point or vector

    registers are used, the current fp/vx registers are saved with

    save_fpu_regs() assuming they belong to user space and will be loaded into

    fp/vx registers when returning to user space.


    test_fp_ctl() restores the original user space fpc register value, however

    it will be discarded, when returning to user space.


    In result the tracer will incorrectly continue to run with the value that

    was supposed to be used for the traced process.


    Fix this by saving fpu register contents with save_fpu_regs() before using

    test_fp_ctl().'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: s390/ptrace:\
    \ maneja la configuraci\xF3n del registro fpc correctamente Si el contenido del\
    \ registro de control de punto flotante (fpc) de un proceso rastreado se modifica\
    \ con la interfaz ptrace, se prueba el nuevo valor validez carg\xE1ndolo temporalmente\
    \ en el registro fpc. Esto puede conducir a la corrupci\xF3n del registro fpc\
    \ del proceso de seguimiento: si ocurre una interrupci\xF3n mientras el valor\
    \ se carga temporalmente en el registro fpc, y dentro del contexto de interrupci\xF3\
    n se utilizan registros de punto flotante o vectoriales, los registros fp/vx actuales\
    \ se guardan con save_fpu_regs() suponiendo que pertenecen al espacio del usuario\
    \ y se cargar\xE1n en los registros fp/vx cuando regresen al espacio del usuario.\
    \ test_fp_ctl() restaura el valor del registro fpc del espacio de usuario original;\
    \ sin embargo, se descartar\xE1 al regresar al espacio de usuario. Como resultado,\
    \ el rastreador continuar\xE1 ejecut\xE1ndose incorrectamente con el valor que\
    \ se supon\xEDa que deb\xEDa usarse para el proceso rastreado. Solucione este\
    \ problema guardando el contenido del registro fpu con save_fpu_regs() antes de\
    \ usar test_fp_ctl()."
id: CVE-2023-52598
lastModified: '2024-03-06T15:18:08.093'
metrics: {}
published: '2024-03-06T07:15:09.990'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/02c6bbfb08bad78dd014e24c7b893723c15ec7a1
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/28a1f492cb527f64593457a0a0f0d809b3f36c25
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/6ccf904aac0292e1f6b1a1be6c407c414f7cf713
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/6d0822f2cc9b153bf2df49a84599195a2e0d21a8
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/7a4d6481fbdd661f9e40e95febb95e3dee82bad3
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/856caf2730ea18cb39e95833719c02a02447dc0a
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/8b13601d19c541158a6e18b278c00ba69ae37829
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/bdce67df7f12fb0409fbc604ce7c4254703f56d4
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
