descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    bpf: Guard stack limits against 32bit overflow


    This patch promotes the arithmetic around checking stack bounds to be

    done in the 64-bit domain, instead of the current 32bit. The arithmetic

    implies adding together a 64-bit register with a int offset. The

    register was checked to be below 1<<29 when it was variable, but not

    when it was fixed. The offset either comes from an instruction (in which

    case it is 16 bit), from another register (in which case the caller

    checked it to be below 1<<29 [1]), or from the size of an argument to a

    kfunc (in which case it can be a u32 [2]). Between the register being

    inconsistently checked to be below 1<<29, and the offset being up to an

    u32, it appears that we were open to overflowing the `int`s which were

    currently used for arithmetic.


    [1] https://github.com/torvalds/linux/blob/815fb87b753055df2d9e50f6cd80eb10235fe3e9/kernel/bpf/verifier.c#L7494-L7498

    [2] https://github.com/torvalds/linux/blob/815fb87b753055df2d9e50f6cd80eb10235fe3e9/kernel/bpf/verifier.c#L11904'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: bpf:\
    \ Proteger los l\xEDmites de la pila contra el desbordamiento de 32 bits. Este\
    \ parche promueve que la aritm\xE9tica en torno a la verificaci\xF3n de los l\xED\
    mites de la pila se realice en el dominio de 64 bits, en lugar del actual de 32\
    \ bits. La aritm\xE9tica implica sumar un registro de 64 bits con un desplazamiento\
    \ int. Se comprob\xF3 que el registro estaba por debajo de 1&lt;&lt;29 cuando\
    \ era variable, pero no cuando estaba arreglado. El desplazamiento proviene de\
    \ una instrucci\xF3n (en cuyo caso es de 16 bits), de otro registro (en cuyo caso\
    \ la persona que llama comprob\xF3 que estaba por debajo de 1&lt;&lt;29 [1]) o\
    \ del tama\xF1o de un argumento para kfunc. (en cuyo caso puede ser un u32 [2]).\
    \ Entre que el registro se verificaba de manera inconsistente para que estuviera\
    \ por debajo de 1&lt;&lt;29 y el desplazamiento era de hasta u32, parece que est\xE1\
    bamos abiertos a desbordar los \"int\" que se usaban actualmente para la aritm\xE9\
    tica. [1] https://github.com/torvalds/linux/blob/815fb87b753055df2d9e50f6cd80eb10235fe3e9/kernel/bpf/verifier.c#L7494-L7498\
    \ [2] https://github.com/torvalds/linux/blob/815fb87b753055df2d9e 50f6cd80eb10235fe3e9/n\xFA\
    cleo /bpf/verifier.c#L11904"
id: CVE-2023-52676
lastModified: '2024-05-17T18:35:35.070'
metrics: {}
published: '2024-05-17T15:15:18.633'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/1d38a9ee81570c4bd61f557832dead4d6f816760
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/ad140fc856f0b1d5e2215bcb6d0cc247a86805a2
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/e5ad9ecb84405637df82732ee02ad741a5f782a6
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
