cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    x86/tdx: Zero out the missing RSI in TDX_HYPERCALL macro


    In the TDX_HYPERCALL asm, after the TDCALL instruction returns from the

    untrusted VMM, the registers that the TDX guest shares to the VMM need

    to be cleared to avoid speculative execution of VMM-provided values.


    RSI is specified in the bitmap of those registers, but it is missing

    when zeroing out those registers in the current TDX_HYPERCALL.


    It was there when it was originally added in commit 752d13305c78

    ("x86/tdx: Expand __tdx_hypercall() to handle more arguments"), but was

    later removed in commit 1e70c680375a ("x86/tdx: Do not corrupt

    frame-pointer in __tdx_hypercall()"), which was correct because %rsi is

    later restored in the "pop %rsi".  However a later commit 7a3a401874be

    ("x86/tdx: Drop flags from __tdx_hypercall()") removed that "pop %rsi"

    but forgot to add the "xor %rsi, %rsi" back.


    Fix by adding it back.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: x86/tdx:\
    \ Ponga a cero el RSI que falta en la macro TDX_HYPERCALL. En el conjunto TDX_HYPERCALL,\
    \ despu\xE9s de que la instrucci\xF3n TDCALL regresa del VMM que no es de confianza,\
    \ los registros que el invitado TDX comparte con el VMM necesitan debe borrarse\
    \ para evitar la ejecuci\xF3n especulativa de los valores proporcionados por VMM.\
    \ RSI se especifica en el mapa de bits de esos registros, pero falta al poner\
    \ a cero esos registros en el TDX_HYPERCALL actual. Estaba all\xED cuando se agreg\xF3\
    \ originalmente en la confirmaci\xF3n 752d13305c78 (\"x86/tdx: Expand__tdx_hypercall()\
    \ to handle more arguments\"), pero luego se elimin\xF3 en la confirmaci\xF3n\
    \ 1e70c680375a (\"x86/tdx: Do not corrupt frame-pointer in __tdx_hypercall( )\"\
    ), lo cual era correcto porque %rsi se restaura posteriormente en el \"pop %rsi\"\
    . Sin embargo, una confirmaci\xF3n posterior 7a3a401874be (\"x86/tdx: Drop flags\
    \ from __tdx_hypercall()\") elimin\xF3 ese \"pop %rsi\" pero olvid\xF3 volver\
    \ a agregar \"xor %rsi, %rsi\". Solucionadlo volvi\xE9ndolo a agregar."
id: CVE-2023-52874
lastModified: '2024-05-21T16:53:56.550'
metrics: {}
published: '2024-05-21T16:15:24.157'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/2191950d35d8f81620ea8d4e04d983f664fe3a8a
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/5d092b66119d774853cc9308522620299048a662
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/de4c5bacca4f50233f1f791bec9eeb4dee1b14cd
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
