descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    locking/ww_mutex/test: Fix potential workqueue corruption


    In some cases running with the test-ww_mutex code, I was seeing

    odd behavior where sometimes it seemed flush_workqueue was

    returning before all the work threads were finished.


    Often this would cause strange crashes as the mutexes would be

    freed while they were being used.


    Looking at the code, there is a lifetime problem as the

    controlling thread that spawns the work allocates the

    "struct stress" structures that are passed to the workqueue

    threads. Then when the workqueue threads are finished,

    they free the stress struct that was passed to them.


    Unfortunately the workqueue work_struct node is in the stress

    struct. Which means the work_struct is freed before the work

    thread returns and while flush_workqueue is waiting.


    It seems like a better idea to have the controlling thread

    both allocate and free the stress structures, so that we can

    be sure we don''t corrupt the workqueue by freeing the structure

    prematurely.


    So this patch reworks the test to do so, and with this change

    I no longer see the early flush_workqueue returns.'
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: lock/ww_mutex/test:\
    \ soluciona una posible corrupci\xF3n de la cola de trabajo. En algunos casos,\
    \ al ejecutar el c\xF3digo test-ww_mutex, ve\xEDa un comportamiento extra\xF1\
    o en el que a veces parec\xEDa que flush_workqueue regresaba antes que todos los\
    \ subprocesos de trabajo. hemos terminado. A menudo, esto causar\xEDa fallas extra\xF1\
    as ya que los mutex se liberar\xEDan mientras se estaban usando. Al observar el\
    \ c\xF3digo, hay un problema de duraci\xF3n, ya que el subproceso de control que\
    \ genera el trabajo asigna las estructuras de \"estr\xE9s de estructura\" que\
    \ se pasan a los subprocesos de la cola de trabajo. Luego, cuando los subprocesos\
    \ de la cola de trabajo finalizan, liberan la estructura de tensi\xF3n que se\
    \ les pas\xF3. Desafortunadamente, el nodo work_struct de la cola de trabajo est\xE1\
    \ en la estructura de estr\xE9s. Lo que significa que work_struct se libera antes\
    \ de que regrese el hilo de trabajo y mientras descarga_workqueue est\xE1 esperando.\
    \ Parece una mejor idea que el subproceso de control asigne y libere las estructuras\
    \ de tensi\xF3n, de modo que podamos estar seguros de no corromper la cola de\
    \ trabajo al liberar la estructura prematuramente. Entonces, este parche reelabora\
    \ la prueba para hacerlo, y con este cambio ya no veo los primeros retornos de\
    \ Flush_workqueue."
id: CVE-2023-52836
lastModified: '2024-05-21T16:53:56.550'
metrics: {}
published: '2024-05-21T16:15:21.090'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/304a2c4aad0fff887ce493e4197bf9cbaf394479
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/9ed2d68b3925145f5f51c46559484881d6082f75
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/bccdd808902f8c677317cec47c306e42b93b849e
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/c56df79d68677cf062da1b6e3b33e74299a92dfc
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/d4d37c9e6a4dbcca958dabd99216550525c7e389
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/d8267cabbe1bed15ccf8b0e684c528bf8eeef715
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/dcd85e3c929368076a7592b27f541e0da8b427f5
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/e36407713163363e65566e7af0abe207d5f59a0c
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/e89d0ed45a419c485bae999426ecf92697cbdda3
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
