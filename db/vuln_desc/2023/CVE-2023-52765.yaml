cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    mfd: qcom-spmi-pmic: Fix revid implementation


    The Qualcomm SPMI PMIC revid implementation is broken in multiple ways.


    First, it assumes that just because the sibling base device has been

    registered that means that it is also bound to a driver, which may not

    be the case (e.g. due to probe deferral or asynchronous probe). This

    could trigger a NULL-pointer dereference when attempting to access the

    driver data of the unbound device.


    Second, it accesses driver data of a sibling device directly and without

    any locking, which means that the driver data may be freed while it is

    being accessed (e.g. on driver unbind).


    Third, it leaks a struct device reference to the sibling device which is

    looked up using the spmi_device_from_of() every time a function (child)

    device is calling the revid function (e.g. on probe).


    Fix this mess by reimplementing the revid lookup so that it is done only

    at probe of the PMIC device; the base device fetches the revid info from

    the hardware, while any secondary SPMI device fetches the information

    from the base device and caches it so that it can be accessed safely

    from its children. If the base device has not been probed yet then probe

    of a secondary device is deferred.'
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: mfd:\
    \ qcom-spmi-pmic: reparaci\xF3n de la implementaci\xF3n revid. La implementaci\xF3\
    n revid de Qualcomm SPMI PMIC est\xE1 rota de varias maneras. En primer lugar,\
    \ se supone que el hecho de que el dispositivo base hermano se haya registrado\
    \ significa que tambi\xE9n est\xE1 vinculado a un controlador, lo que puede no\
    \ ser el caso (por ejemplo, debido a un aplazamiento de la sonda o una sonda asincr\xF3\
    nica). Esto podr\xEDa desencadenar una desreferencia del puntero NULL al intentar\
    \ acceder a los datos del controlador del dispositivo independiente. En segundo\
    \ lugar, accede a los datos del controlador de un dispositivo hermano directamente\
    \ y sin ning\xFAn bloqueo, lo que significa que los datos del controlador pueden\
    \ liberarse mientras se accede a ellos (por ejemplo, al desvincular el controlador).\
    \ En tercer lugar, filtra una referencia de dispositivo de estructura al dispositivo\
    \ hermano que se busca usando spmi_device_from_of() cada vez que un dispositivo\
    \ de funci\xF3n (secundario) llama a la funci\xF3n revid (por ejemplo, en la sonda).\
    \ Solucione este problema volviendo a implementar la b\xFAsqueda revid para que\
    \ se realice solo en la sonda del dispositivo PMIC; el dispositivo base obtiene\
    \ la informaci\xF3n revid del hardware, mientras que cualquier dispositivo SPMI\
    \ secundario obtiene la informaci\xF3n del dispositivo base y la almacena en cach\xE9\
    \ para que sus hijos puedan acceder a ella de forma segura. Si el dispositivo\
    \ base a\xFAn no ha sido sondeado, se pospone la sonda de un dispositivo secundario."
id: CVE-2023-52765
lastModified: '2024-05-21T16:53:56.550'
metrics: {}
published: '2024-05-21T16:15:15.777'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/4ce77b023d42a9f1062eecf438df1af4b4072eb2
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/7b439aaa62fee474a0d84d67a25f4984467e7b95
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/affae18838db5e6b463ee30c821385695af56dc2
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/db98de0809f12b0edb9cd1be78e1ec1bfeba8f40
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
