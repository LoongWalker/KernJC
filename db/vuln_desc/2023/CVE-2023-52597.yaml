descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    KVM: s390: fix setting of fpc register


    kvm_arch_vcpu_ioctl_set_fpu() allows to set the floating point control

    (fpc) register of a guest cpu. The new value is tested for validity by

    temporarily loading it into the fpc register.


    This may lead to corruption of the fpc register of the host process:

    if an interrupt happens while the value is temporarily loaded into the fpc

    register, and within interrupt context floating point or vector registers

    are used, the current fp/vx registers are saved with save_fpu_regs()

    assuming they belong to user space and will be loaded into fp/vx registers

    when returning to user space.


    test_fp_ctl() restores the original user space / host process fpc register

    value, however it will be discarded, when returning to user space.


    In result the host process will incorrectly continue to run with the value

    that was supposed to be used for a guest cpu.


    Fix this by simply removing the test. There is another test right before

    the SIE context is entered which will handles invalid values.


    This results in a change of behaviour: invalid values will now be accepted

    instead of that the ioctl fails with -EINVAL. This seems to be acceptable,

    given that this interface is most likely not used anymore, and this is in

    addition the same behaviour implemented with the memory mapped interface

    (replace invalid values with zero) - see sync_regs() in kvm-s390.c.'
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: KVM:\
    \ s390: configuraci\xF3n fija del registro fpc kvm_arch_vcpu_ioctl_set_fpu() permite\
    \ configurar el registro de control de punto flotante (fpc) de una CPU invitada.\
    \ Se prueba la validez del nuevo valor carg\xE1ndolo temporalmente en el registro\
    \ fpc. Esto puede conducir a la corrupci\xF3n del registro fpc del proceso host:\
    \ si ocurre una interrupci\xF3n mientras el valor se carga temporalmente en el\
    \ registro fpc, y dentro del contexto de interrupci\xF3n se utilizan registros\
    \ de punto flotante o vectoriales, los registros fp/vx actuales se guardan con\
    \ save_fpu_regs() suponiendo que pertenecen al espacio del usuario y se cargar\xE1\
    n en los registros fp/vx cuando regresen al espacio del usuario. test_fp_ctl()\
    \ restaura el valor de registro fpc del proceso de host/espacio de usuario original;\
    \ sin embargo, se descartar\xE1 al regresar al espacio de usuario. Como resultado,\
    \ el proceso del host continuar\xE1 ejecut\xE1ndose incorrectamente con el valor\
    \ que se supon\xEDa que deb\xEDa usarse para una CPU invitada. Solucione este\
    \ problema simplemente quitando la prueba. Hay otra prueba justo antes de ingresar\
    \ al contexto SIE que manejar\xE1 valores no v\xE1lidos. Esto da como resultado\
    \ un cambio de comportamiento: ahora se aceptar\xE1n valores no v\xE1lidos en\
    \ lugar de que el ioctl falle con -EINVAL. Esto parece aceptable, dado que lo\
    \ m\xE1s probable es que esta interfaz ya no se use y, adem\xE1s, este es el mismo\
    \ comportamiento implementado con la interfaz asignada en memoria (reemplace los\
    \ valores no v\xE1lidos con cero); consulte sync_regs() en kvm-s390.c."
id: CVE-2023-52597
lastModified: '2024-03-06T15:18:08.093'
metrics: {}
published: '2024-03-06T07:15:09.827'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/0671f42a9c1084db10d68ac347d08dbf6689ecb3
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/150a3a3871490e8c454ffbac2e60abeafcecff99
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/2823db0010c400e4b2b12d02aa5d0d3ecb15d7c7
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/3a04410b0bc7e056e0843ac598825dd359246d18
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/5e63c9ae8055109d805aacdaf2a4fe2c3b371ba1
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/732a3bea7aba5b15026ea42d14953c3425cc7dc2
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/b988b1bb0053c0dcd26187d29ef07566a565cf55
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/c87d7d910775a025e230fd6359b60627e392460f
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
