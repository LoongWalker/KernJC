cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    net: dsa: seville: register the mdiobus under devres


    As explained in commits:

    74b6d7d13307 ("net: dsa: realtek: register the MDIO bus under devres")

    5135e96a3dd2 ("net: dsa: don''t allocate the slave_mii_bus using devres")


    mdiobus_free() will panic when called from devm_mdiobus_free() <-

    devres_release_all() <- __device_release_driver(), and that mdiobus was

    not previously unregistered.


    The Seville VSC9959 switch is a platform device, so the initial set of

    constraints that I thought would cause this (I2C or SPI buses which call

    ->remove on ->shutdown) do not apply. But there is one more which

    applies here.


    If the DSA master itself is on a bus that calls ->remove from ->shutdown

    (like dpaa2-eth, which is on the fsl-mc bus), there is a device link

    between the switch and the DSA master, and device_links_unbind_consumers()

    will unbind the seville switch driver on shutdown.


    So the same treatment must be applied to all DSA switch drivers, which

    is: either use devres for both the mdiobus allocation and registration,

    or don''t use devres at all.


    The seville driver has a code structure that could accommodate both the

    mdiobus_unregister and mdiobus_free calls, but it has an external

    dependency upon mscc_miim_setup() from mdio-mscc-miim.c, which calls

    devm_mdiobus_alloc_size() on its behalf. So rather than restructuring

    that, and exporting yet one more symbol mscc_miim_teardown(), let''s work

    with devres and replace of_mdiobus_register with the devres variant.

    When we use all-devres, we can ensure that devres doesn''t free a

    still-registered bus (it either runs both callbacks, or none).'
- lang: es
  value: "En el kernel de Linux se ha resuelto la siguiente vulnerabilidad: net: dsa:\
    \ seville: registrar el mdiobus bajo devres Como se explica en commits: 74b6d7d13307\
    \ (\"net: dsa: realtek: registrar el bus MDIO bajo devres\") 5135e96a3dd2 (\"\
    net: dsa: no asigne el esclavo_mii_bus usando devres\") mdiobus_free() entrar\xE1\
    \ en p\xE1nico cuando se llame desde devm_mdiobus_free() &lt;- devres_release_all()\
    \ &lt;- __device_release_driver(), y ese mdiobus no fue anulado previamente. El\
    \ conmutador Sevilla VSC9959 es un dispositivo de plataforma, por lo que el conjunto\
    \ inicial de restricciones que pens\xE9 que causar\xEDan esto (buses I2C o SPI\
    \ que llaman -&gt;eliminar encendido -&gt;apagar) no se aplican. Pero hay algo\
    \ m\xE1s que se aplica aqu\xED. Si el maestro DSA est\xE1 en un bus que llama\
    \ -&gt;remove from -&gt;shutdown (como dpaa2-eth, que est\xE1 en el bus fsl-mc),\
    \ hay un enlace de dispositivo entre el conmutador y el maestro DSA, y device_links_unbind_consumers(\
    \ ) desvincular\xE1 el controlador del interruptor de Sevilla al apagarlo. Por\
    \ lo tanto, se debe aplicar el mismo tratamiento a todos los controladores de\
    \ conmutador DSA, que es: usar devres tanto para la asignaci\xF3n como para el\
    \ registro de mdiobus, o no usar devres en absoluto. El controlador Sevilla tiene\
    \ una estructura de c\xF3digo que podr\xEDa acomodar las llamadas mdiobus_unregister\
    \ y mdiobus_free, pero tiene una dependencia externa de mscc_miim_setup() de mdio-mscc-miim.c,\
    \ que llama a devm_mdiobus_alloc_size() en su nombre. Entonces, en lugar de reestructurar\
    \ eso y exportar un s\xEDmbolo m\xE1s mscc_miim_teardown(), trabajemos con devres\
    \ y reemplacemos of_mdiobus_register con la variante devres. Cuando usamos all-devres,\
    \ podemos asegurarnos de que devres no libere un bus a\xFAn registrado (ejecuta\
    \ ambas devoluciones de llamada o ninguna)."
id: CVE-2022-48814
lastModified: '2024-07-16T13:43:58.773'
metrics: {}
published: '2024-07-16T12:15:05.563'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/0e816362d823cd46c666e64d8bffe329ee22f4cc
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/1d13e7221035947c62800c9d3d99b4ed570e27e7
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/bd488afc3b39e045ba71aab472233f2a78726e7b
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
