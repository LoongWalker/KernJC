configurations:
- nodes:
  - cpeMatch:
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 11A056EC-CCC4-4F9D-8466-75C8592015D0
      versionEndExcluding: 5.10.104
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 9AB342AE-A62E-4947-A6EA-511453062B2B
      versionEndExcluding: 5.15.26
      versionStartIncluding: '5.11'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: C76BAB21-7F23-4AD8-A25F-CA7B262A2698
      versionEndExcluding: 5.16.12
      versionStartIncluding: '5.16'
      vulnerable: true
    negate: false
    operator: OR
cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    ice: fix concurrent reset and removal of VFs


    Commit c503e63200c6 ("ice: Stop processing VF messages during teardown")

    introduced a driver state flag, ICE_VF_DEINIT_IN_PROGRESS, which is

    intended to prevent some issues with concurrently handling messages from

    VFs while tearing down the VFs.


    This change was motivated by crashes caused while tearing down and

    bringing up VFs in rapid succession.


    It turns out that the fix actually introduces issues with the VF driver

    caused because the PF no longer responds to any messages sent by the VF

    during its .remove routine. This results in the VF potentially removing

    its DMA memory before the PF has shut down the device queues.


    Additionally, the fix doesn''t actually resolve concurrency issues within

    the ice driver. It is possible for a VF to initiate a reset just prior

    to the ice driver removing VFs. This can result in the remove task

    concurrently operating while the VF is being reset. This results in

    similar memory corruption and panics purportedly fixed by that commit.


    Fix this concurrency at its root by protecting both the reset and

    removal flows using the existing VF cfg_lock. This ensures that we

    cannot remove the VF while any outstanding critical tasks such as a

    virtchnl message or a reset are occurring.


    This locking change also fixes the root cause originally fixed by commit

    c503e63200c6 ("ice: Stop processing VF messages during teardown"), so we

    can simply revert it.


    Note that I kept these two changes together because simply reverting the

    original commit alone would leave the driver vulnerable to worse race

    conditions.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ice:\
    \ corrige el restablecimiento y la eliminaci\xF3n simult\xE1neos de VF. El commit\
    \ c503e63200c6 (\"ice: deja de procesar mensajes VF durante el desmontaje\") introdujo\
    \ un indicador de estado del controlador, ICE_VF_DEINIT_IN_PROGRESS, cuyo objetivo\
    \ es evitar algunos problemas con el manejo simult\xE1neo de mensajes de VF mientras\
    \ se derriban los VF. Este cambio fue motivado por accidentes causados al derribar\
    \ y levantar VF en r\xE1pida sucesi\xF3n. Resulta que la soluci\xF3n en realidad\
    \ introduce problemas con el controlador VF causados porque el PF ya no responde\
    \ a ning\xFAn mensaje enviado por el VF durante su rutina .remove. Esto da como\
    \ resultado que el VF elimine potencialmente su memoria DMA antes de que el PF\
    \ haya cerrado las colas de dispositivos. Adem\xE1s, la soluci\xF3n en realidad\
    \ no resuelve los problemas de concurrencia dentro del controlador Ice. Es posible\
    \ que un VF inicie un reinicio justo antes de que el driver de hielo elimine los\
    \ VF. Esto puede provocar que la tarea de eliminaci\xF3n funcione simult\xE1neamente\
    \ mientras se restablece el VF. Esto da como resultado una corrupci\xF3n de memoria\
    \ similar y p\xE1nicos supuestamente solucionados por esa confirmaci\xF3n. Corrija\
    \ esta simultaneidad desde la ra\xEDz protegiendo los flujos de reinicio y eliminaci\xF3\
    n utilizando el VF cfg_lock existente. Esto garantiza que no podamos eliminar\
    \ el VF mientras se est\xE9n realizando tareas cr\xEDticas pendientes, como un\
    \ mensaje virtchnl o un reinicio. Este cambio de bloqueo tambi\xE9n soluciona\
    \ la causa ra\xEDz solucionada originalmente mediante el commit c503e63200c6 (\"\
    ice: Detener el procesamiento de mensajes VF durante el desmontaje\"), por lo\
    \ que simplemente podemos revertirlo. Tenga en cuenta que mantuve estos dos cambios\
    \ juntos porque simplemente revertir el compromiso original dejar\xEDa al driver\
    \ vulnerable a peores condiciones de ejecuci\xF3n."
id: CVE-2022-48941
lastModified: '2024-08-22T18:41:37.090'
metrics:
  cvssMetricV31:
  - cvssData:
      attackComplexity: HIGH
      attackVector: LOCAL
      availabilityImpact: HIGH
      baseScore: 4.7
      baseSeverity: MEDIUM
      confidentialityImpact: NONE
      integrityImpact: NONE
      privilegesRequired: LOW
      scope: UNCHANGED
      userInteraction: NONE
      vectorString: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
      version: '3.1'
    exploitabilityScore: 1.0
    impactScore: 3.6
    source: nvd@nist.gov
    type: Primary
published: '2024-08-22T04:15:17.967'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/05ae1f0fe9c6c5ead08b306e665763a352d20716
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/2a3e61de89bab6696aa28b70030eb119968c5586
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/3c805fce07c9dbc47d8a9129c7c5458025951957
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/fadead80fe4c033b5e514fcbadd20b55c4494112
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Analyzed
weaknesses:
- description:
  - lang: en
    value: CWE-362
  source: nvd@nist.gov
  type: Primary
