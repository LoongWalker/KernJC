cveTags: []
descriptions:
- lang: en
  value: "In the Linux kernel, the following vulnerability has been resolved:\n\n\
    sched/fair: Fix fault in reweight_entity\n\nSyzbot found a GPF in reweight_entity.\
    \ This has been bisected to\ncommit 4ef0c5c6b5ba (\"kernel/sched: Fix sched_fork()\
    \ access an invalid\nsched_task_group\")\n\nThere\_is a race between sched_post_fork()\
    \ and setpriority(PRIO_PGRP)\nwithin a thread group that causes a null-ptr-deref\_\
    in\nreweight_entity() in CFS. The scenario is that the main process spawns\nnumber\
    \ of new threads, which then call setpriority(PRIO_PGRP, 0, -20),\nwait, and exit.\
    \  For each of the new threads the copy_process() gets\ninvoked, which adds the\
    \ new task_struct and calls sched_post_fork()\nfor it.\n\nIn the above scenario\
    \ there is a possibility that\nsetpriority(PRIO_PGRP) and set_one_prio() will\
    \ be called for a thread\nin the group that is just being created by copy_process(),\
    \ and for\nwhich the sched_post_fork() has not been executed yet. This will\n\
    trigger a null pointer dereference in reweight_entity(),\_as it will\ntry to access\
    \ the run queue pointer, which hasn't been set.\n\nBefore the mentioned change\
    \ the cfs_rq pointer for the task  has been\nset in sched_fork(), which is called\
    \ much earlier in copy_process(),\nbefore the new task is added to the thread_group.\
    \  Now it is done in\nthe sched_post_fork(), which is called after that.  To fix\
    \ the issue\nthe remove the update_load param from the update_load param() function\n\
    and call reweight_task() only if the task flag doesn't have the\nTASK_NEW flag\
    \ set."
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: sched/fair:\
    \ Solucionar falla en reweight_entity Syzbot encontr\xF3 un GPF en reweight_entity.\
    \ Esto se ha dividido en dos para el commit 4ef0c5c6b5ba (\"kernel/sched: Fix\
    \ sched_fork() accede a un sched_task_group no v\xE1lido\") Hay una ejecuci\xF3\
    n entre sched_post_fork() y setpriority(PRIO_PGRP) dentro de un grupo de subprocesos\
    \ que provoca un null-ptr-deref en reweight_entity () en el SFC. El escenario\
    \ es que el proceso principal genera una cantidad de subprocesos nuevos, que luego\
    \ llaman a setpriority(PRIO_PGRP, 0, -20), esperan y salen. Para cada uno de los\
    \ nuevos subprocesos, se invoca copy_process(), lo que agrega la nueva task_struct\
    \ y llama a sched_post_fork() para ello. En el escenario anterior existe la posibilidad\
    \ de que se llame a setpriority(PRIO_PGRP) y set_one_prio() para un subproceso\
    \ en el grupo que acaba de crear copy_process(), y para el cual sched_post_fork()\
    \ a\xFAn no se ha ejecutado. Esto desencadenar\xE1 una desreferencia del puntero\
    \ nulo en reweight_entity(), ya que intentar\xE1 acceder al puntero de la cola\
    \ de ejecuci\xF3n, que no se ha configurado. Antes del cambio mencionado, el puntero\
    \ cfs_rq para la tarea se configur\xF3 en sched_fork(), que se llama mucho antes\
    \ en copy_process(), antes de que la nueva tarea se agregue al thread_group. Ahora\
    \ se hace en sched_post_fork(), que se llama despu\xE9s de eso. Para solucionar\
    \ el problema, elimine el par\xE1metro update_load de la funci\xF3n update_load\
    \ param() y llame a reweight_task() solo si el indicador de tarea no tiene establecido\
    \ el indicador TASK_NEW."
id: CVE-2022-48921
lastModified: '2024-08-22T12:48:02.790'
metrics: {}
published: '2024-08-22T02:15:08.197'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/13765de8148f71fa795e0a6607de37c49ea5915a
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/589a954daab5e18399860b6c8ffaeaf79844eb20
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/8f317cd888059c59e2fa924bf4b0957cfa53f78e
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/e0bcd6b5779352aed88f2e538a82a39f1a7715bb
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Undergoing Analysis
