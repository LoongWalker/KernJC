cveTags: []
descriptions:
- lang: en
  value: "In the Linux kernel, the following vulnerability has been resolved:\n\n\
    f2fs: fix to avoid touching checkpointed data in get_victim()\n\nIn CP disabling\
    \ mode, there are two issues when using LFS or SSR | AT_SSR\nmode to select victim:\n\
    \n1. LFS is set to find source section during GC, the victim should have\nno checkpointed\
    \ data, since after GC, section could not be set free for\nreuse.\n\nPreviously,\
    \ we only check valid chpt blocks in current segment rather\nthan section, fix\
    \ it.\n\n2. SSR | AT_SSR are set to find target segment for writes which can be\n\
    fully filled by checkpointed and newly written blocks, we should never\nselect\
    \ such segment, otherwise it can cause panic or data corruption\nduring allocation,\
    \ potential case is described as below:\n\n a) target segment has 'n' (n < 512)\
    \ ckpt valid blocks\n b) GC migrates 'n' valid blocks to other segment (segment\
    \ is still\n    in dirty list)\n c) GC migrates '512 - n' blocks to target segment\
    \ (segment has 'n'\n    cp_vblocks and '512 - n' vblocks)\n d) If GC selects target\
    \ segment via {AT,}SSR allocator, however there\n    is no free space in targe\
    \ segment."
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: f2fs:\
    \ correcci\xF3n para evitar tocar datos con puntos de control en get_victim()\
    \ En el modo de desactivaci\xF3n de CP, hay dos problemas al usar LFS o SSR |\
    \ Modo AT_SSR para seleccionar a la v\xEDctima: 1. LFS est\xE1 configurado para\
    \ buscar la secci\xF3n de origen durante la GC, la v\xEDctima no debe tener datos\
    \ de puntos de control, ya que despu\xE9s de la GC, la secci\xF3n no se puede\
    \ liberar para su reutilizaci\xF3n. Anteriormente, solo verific\xE1bamos los bloques\
    \ chpt v\xE1lidos en el segmento actual en lugar de en la secci\xF3n, lo arreglamos.\
    \ 2. RSS | AT_SSR est\xE1 configurado para encontrar un segmento de destino para\
    \ escrituras que se puede llenar completamente con bloques reci\xE9n escritos\
    \ y con puntos de control. Nunca debemos seleccionar dicho segmento; de lo contrario,\
    \ puede causar p\xE1nico o corrupci\xF3n de datos durante la asignaci\xF3n. El\
    \ caso potencial se describe a continuaci\xF3n: a) segmento de destino tiene 'n'\
    \ (n &lt; 512) ckpt bloques v\xE1lidos b) GC migra 'n' bloques v\xE1lidos a otro\
    \ segmento (el segmento todav\xEDa est\xE1 en la lista sucia) c) GC migra '512\
    \ - n' bloques al segmento objetivo (el segmento tiene 'n ' cp_vblocks y '512\
    \ - n' vblocks) d) Si GC selecciona el segmento de destino mediante el asignador\
    \ {AT,}SSR, sin embargo, no hay espacio libre en el segmento de destino."
id: CVE-2021-47004
lastModified: '2024-02-28T14:06:45.783'
metrics: {}
published: '2024-02-28T09:15:38.353'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/105155a8146ddb54c119d8318964eef3859d109d
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/1e116f87825f01a6380286472196882746b16f63
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/211372b2571520e394b56b431a0705586013b3ff
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/61461fc921b756ae16e64243f72af2bfc2e620db
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
