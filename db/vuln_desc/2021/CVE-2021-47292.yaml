cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    io_uring: fix memleak in io_init_wq_offload()


    I got memory leak report when doing fuzz test:


    BUG: memory leak

    unreferenced object 0xffff888107310a80 (size 96):

    comm "syz-executor.6", pid 4610, jiffies 4295140240 (age 20.135s)

    hex dump (first 32 bytes):

    01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................

    00 00 00 00 ad 4e ad de ff ff ff ff 00 00 00 00 .....N..........

    backtrace:

    [<000000001974933b>] kmalloc include/linux/slab.h:591 [inline]

    [<000000001974933b>] kzalloc include/linux/slab.h:721 [inline]

    [<000000001974933b>] io_init_wq_offload fs/io_uring.c:7920 [inline]

    [<000000001974933b>] io_uring_alloc_task_context+0x466/0x640 fs/io_uring.c:7955

    [<0000000039d0800d>] __io_uring_add_tctx_node+0x256/0x360 fs/io_uring.c:9016

    [<000000008482e78c>] io_uring_add_tctx_node fs/io_uring.c:9052 [inline]

    [<000000008482e78c>] __do_sys_io_uring_enter fs/io_uring.c:9354 [inline]

    [<000000008482e78c>] __se_sys_io_uring_enter fs/io_uring.c:9301 [inline]

    [<000000008482e78c>] __x64_sys_io_uring_enter+0xabc/0xc20 fs/io_uring.c:9301

    [<00000000b875f18f>] do_syscall_x64 arch/x86/entry/common.c:50 [inline]

    [<00000000b875f18f>] do_syscall_64+0x3b/0x90 arch/x86/entry/common.c:80

    [<000000006b0a8484>] entry_SYSCALL_64_after_hwframe+0x44/0xae


    CPU0                          CPU1

    io_uring_enter                io_uring_enter

    io_uring_add_tctx_node        io_uring_add_tctx_node

    __io_uring_add_tctx_node      __io_uring_add_tctx_node

    io_uring_alloc_task_context   io_uring_alloc_task_context

    io_init_wq_offload            io_init_wq_offload

    hash = kzalloc                hash = kzalloc

    ctx->hash_map = hash          ctx->hash_map = hash <- one of the hash is leaked


    When calling io_uring_enter() in parallel, the ''hash_map'' will be leaked,

    add uring_lock to protect ''hash_map''.'
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: io_uring:\
    \ corrige memleak en io_init_wq_offload(). Recib\xED un informe de p\xE9rdida\
    \ de memoria al realizar la prueba fuzz: BUG: p\xE9rdida de memoria objeto sin\
    \ referencia 0xffff888107310a80 (tama\xF1o 96): comm \"syz-executor.6\" , pid\
    \ 4610, sjiffies 4295140240 (edad 20,135 s) volcado hexadecimal (primeros 32 bytes):\
    \ 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................. 00 00 00 00\
    \ ad 4e ad de ff ff ff ff 00 00 00 00 .....N.......... backtrace: [&lt;000000001974933b&gt;]\
    \ kmalloc include/linux/slab.h:591 [en l\xEDnea] [&lt;000000001974933b&gt;] kzalloc\
    \ include/linux/slab.h:721 [en l\xEDnea] [&lt;000000001974933b&gt;] io_init_wq_offload\
    \ fs/io_uring.c:7920 [en l\xEDnea] [&lt;000000001974933b&gt;] _context+0x466/0x640\
    \ fs/io_uring .c:7955 [&lt;0000000039d0800d&gt;] __io_uring_add_tctx_node+0x256/0x360\
    \ fs/io_uring.c:9016 [&lt;000000008482e78c&gt;] io_uring_add_tctx_node fs/io_uring.c:9052\
    \ [en l\xEDnea] 0000008482e78c&gt;] __do_sys_io_uring_enter fs/io_uring.c:9354\
    \ [en l\xEDnea] [&lt;000000008482e78c&gt;] __se_sys_io_uring_enter fs/io_uring.c:9301\
    \ [en l\xEDnea] [&lt;000000008482e78c&gt;] __x64_sys_io_uring_enter+0xabc/0xc20\
    \ fs/io_uring.c:9301 [&lt;00000000b 875f18f&gt;] do_syscall_x64 arch/x86/entry/common.\
    \ c:50 [en l\xEDnea] [&lt;00000000b875f18f&gt;] do_syscall_64+0x3b/0x90 arch/x86/entry/common.c:80\
    \ [&lt;000000006b0a8484&gt;] Entry_SYSCALL_64_after_hwframe+0x44/0xae CPU0 CPU1\
    \ io_uring_enter io_uring_enter io_uring_add_tctx_node io_uring_add_tctx_node\
    \ __io_uring_add_tctx_node __io_uring_add_tctx_node io_uring_alloc_task_context\
    \ io_uring_alloc_task_context io_init_wq_offload io_init_wq_offload hash = kzalloc\
    \ hash = kzalloc ctx-&gt;hash_map = hash ctx-&gt;hash_map = hash &lt;- uno de\
    \ los hash se filtra Al llamar a io_uring_enter() en paralelo, se filtrar\xE1\
    \ el 'hash_map', agregue uring_lock para proteger 'hash_map'."
id: CVE-2021-47292
lastModified: '2024-05-21T16:54:26.047'
metrics: {}
published: '2024-05-21T15:15:17.173'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/362a9e65289284f36403058eea2462d0330c1f24
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/502731a03f27cba1513fbbff77e508185ffce5bb
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
