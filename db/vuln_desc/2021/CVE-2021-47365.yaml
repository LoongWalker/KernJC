descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    afs: Fix page leak


    There''s a loop in afs_extend_writeback() that adds extra pages to a write

    we want to make to improve the efficiency of the writeback by making it

    larger.  This loop stops, however, if we hit a page we can''t write back

    from immediately, but it doesn''t get rid of the page ref we speculatively

    acquired.


    This was caused by the removal of the cleanup loop when the code switched

    from using find_get_pages_contig() to xarray scanning as the latter only

    gets a single page at a time, not a batch.


    Fix this by putting the page on a ref on an early break from the loop.

    Unfortunately, we can''t just add that page to the pagevec we''re employing

    as we''ll go through that and add those pages to the RPC call.


    This was found by the generic/074 test.  It leaks ~4GiB of RAM each time it

    is run - which can be observed with "top".'
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: afs:\
    \ Reparar p\xE9rdida de p\xE1gina. Hay un bucle en afs_extend_writeback() que\
    \ agrega p\xE1ginas adicionales a una escritura que queremos realizar para mejorar\
    \ la eficiencia de la escritura diferida haci\xE9ndola m\xE1s grande. Sin embargo,\
    \ este bucle se detiene si llegamos a una p\xE1gina desde la que no podemos escribir\
    \ de inmediato, pero no elimina la referencia de p\xE1gina que adquirimos especulativamente.\
    \ Esto se debi\xF3 a la eliminaci\xF3n del bucle de limpieza cuando el c\xF3digo\
    \ pas\xF3 de usar find_get_pages_contig() a escanear xarray, ya que este \xFA\
    ltimo solo obtiene una p\xE1gina a la vez, no un lote. Solucione este problema\
    \ poniendo la p\xE1gina en un \xE1rbitro en un descanso temprano del bucle. Desafortunadamente,\
    \ no podemos simplemente agregar esa p\xE1gina al pagevec que estamos empleando,\
    \ ya que revisaremos eso y agregaremos esas p\xE1ginas a la llamada RPC. Esto\
    \ se encontr\xF3 mediante la prueba gen\xE9rica/074. Pierde ~4GiB de RAM cada\
    \ vez que se ejecuta, lo que se puede observar con \"TOP\"."
id: CVE-2021-47365
lastModified: '2024-05-21T16:54:26.047'
metrics: {}
published: '2024-05-21T15:15:22.563'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/581b2027af0018944ba301d68e7af45c6d1128b5
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/d130b5fdd42254d92948d06347940276140c927e
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
