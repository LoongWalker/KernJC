descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    habanalabs/gaudi: Fix a potential use after free in gaudi_memset_device_memory


    Our code analyzer reported a uaf.


    In gaudi_memset_device_memory, cb is get via hl_cb_kernel_create()

    with 2 refcount.

    If hl_cs_allocate_job() failed, the execution runs into release_cb

    branch. One ref of cb is dropped by hl_cb_put(cb) and could be freed

    if other thread also drops one ref. Then cb is used by cb->id later,

    which is a potential uaf.


    My patch add a variable ''id'' to accept the value of cb->id before the

    hl_cb_put(cb) is called, to avoid the potential uaf.'
- lang: es
  value: "En el kernel de Linux se ha resuelto la siguiente vulnerabilidad: habanalabs/gaudi:\
    \ Corregir un uso potencial despu\xE9s de liberar en gaudi_memset_device_memory\
    \ Nuestro analizador de c\xF3digo report\xF3 un uaf. En gaudi_memset_device_memory,\
    \ cb se obtiene a trav\xE9s de hl_cb_kernel_create() con 2 refcount. Si hl_cs_allocate_job()\
    \ falla, la ejecuci\xF3n se ejecuta en la rama release_cb. hl_cb_put(cb) elimina\
    \ una referencia de cb y podr\xEDa liberarse si otro hilo tambi\xE9n elimina una\
    \ referencia. Luego, cb-&gt;id usa cb m\xE1s tarde, que es un uaf potencial. Mi\
    \ parche agrega una variable 'id' para aceptar el valor de cb-&gt;id antes de\
    \ llamar a hl_cb_put(cb), para evitar el potencial uaf."
id: CVE-2021-47081
lastModified: '2024-03-01T22:22:25.913'
metrics: {}
published: '2024-03-01T22:15:47.483'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/115726c5d312b462c9d9931ea42becdfa838a076
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/b49f5af30b0e4064fbd91e83823a4bfcb2c7a3e7
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
