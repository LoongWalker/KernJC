cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    aio: fix use-after-free due to missing POLLFREE handling


    signalfd_poll() and binder_poll() are special in that they use a

    waitqueue whose lifetime is the current task, rather than the struct

    file as is normally the case.  This is okay for blocking polls, since a

    blocking poll occurs within one task; however, non-blocking polls

    require another solution.  This solution is for the queue to be cleared

    before it is freed, by sending a POLLFREE notification to all waiters.


    Unfortunately, only eventpoll handles POLLFREE.  A second type of

    non-blocking poll, aio poll, was added in kernel v4.18, and it doesn''t

    handle POLLFREE.  This allows a use-after-free to occur if a signalfd or

    binder fd is polled with aio poll, and the waitqueue gets freed.


    Fix this by making aio poll handle POLLFREE.


    A patch by Ramji Jiyani <ramjiyani@google.com>

    (https://lore.kernel.org/r/20211027011834.2497484-1-ramjiyani@google.com)

    tried to do this by making aio_poll_wake() always complete the request

    inline if POLLFREE is seen.  However, that solution had two bugs.

    First, it introduced a deadlock, as it unconditionally locked the aio

    context while holding the waitqueue lock, which inverts the normal

    locking order.  Second, it didn''t consider that POLLFREE notifications

    are missed while the request has been temporarily de-queued.


    The second problem was solved by my previous patch.  This patch then

    properly fixes the use-after-free by handling POLLFREE in a

    deadlock-free way.  It does this by taking advantage of the fact that

    freeing of the waitqueue is RCU-delayed, similar to what eventpoll does.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: aio:\
    \ corrige el use-after-free debido a la falta de manejo de POLLFREE. signalfd_poll()\
    \ y binder_poll() son especiales porque usan una cola de espera cuya duraci\xF3\
    n es la tarea actual, en lugar de la struct archivo como es normalmente el caso.\
    \ Esto est\xE1 bien para bloquear encuestas, ya que una encuesta de bloqueo ocurre\
    \ dentro de una tarea; sin embargo, las encuestas sin bloqueo requieren otra soluci\xF3\
    n. Esta soluci\xF3n consiste en despejar la cola antes de liberarla, enviando\
    \ una notificaci\xF3n POLLFREE a todos los camareros. Desafortunadamente, s\xF3\
    lo eventpoll maneja POLLFREE. Un segundo tipo de encuesta sin bloqueo, aio poll,\
    \ se agreg\xF3 en el kernel v4.18 y no maneja POLLFREE. Esto permite que se produzca\
    \ un use-after-free si se sondea un signalfd o un binder fd con aio poll y se\
    \ libera la cola de espera. Solucione este problema haciendo que la encuesta de\
    \ aio se maneje POLLFREE. Un parche de Ramji Jiyani  (https://lore.kernel.org/r/20211027011834.2497484-1-ramjiyani@google.com)\
    \ intent\xF3 hacer esto haciendo que aio_poll_wake() siempre completara la solicitud\
    \ en l\xEDnea si Se ve POLLFREE. Sin embargo, esa soluci\xF3n ten\xEDa dos errores.\
    \ Primero, introdujo un punto muerto, ya que bloque\xF3 incondicionalmente el\
    \ contexto aio mientras manten\xEDa el bloqueo de la cola de espera, lo que invierte\
    \ el orden de bloqueo normal. En segundo lugar, no consider\xF3 que las notificaciones\
    \ de POLLFREE se pierdan mientras la solicitud ha sido retirada temporalmente\
    \ de la cola. El segundo problema lo resolvi\xF3 mi parche anterior. Luego, este\
    \ parche corrige adecuadamente el use-after-free al manejar POLLFREE sin interbloqueos.\
    \ Lo hace aprovechando el hecho de que la liberaci\xF3n de la cola de espera tiene\
    \ un retraso de RCU, similar a lo que hace eventpoll."
id: CVE-2021-47505
lastModified: '2024-05-24T18:09:20.027'
metrics: {}
published: '2024-05-24T15:15:11.000'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/321fba81ec034f88aea4898993c1bf15605c023f
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/4105e6a128e8a98455dfc9e6dbb2ab0c33c4497f
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/47ffefd88abfffe8a040bcc1dd0554d4ea6f7689
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/50252e4b5e989ce64555c7aef7516bdefc2fea72
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/60d311f9e6381d779d7d53371f87285698ecee24
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
