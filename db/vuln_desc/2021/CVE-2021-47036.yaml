cveTags: []
descriptions:
- lang: en
  value: "In the Linux kernel, the following vulnerability has been resolved:\n\n\
    udp: skip L4 aggregation for UDP tunnel packets\n\nIf NETIF_F_GRO_FRAGLIST or\
    \ NETIF_F_GRO_UDP_FWD are enabled, and there\nare UDP tunnels available in the\
    \ system, udp_gro_receive() could end-up\ndoing L4 aggregation (either SKB_GSO_UDP_L4\
    \ or SKB_GSO_FRAGLIST) at\nthe outer UDP tunnel level for packets effectively\
    \ carrying and UDP\ntunnel header.\n\nThat could cause inner protocol corruption.\
    \ If e.g. the relevant\npackets carry a vxlan header, different vxlan ids will\
    \ be ignored/\naggregated to the same GSO packet. Inner headers will be ignored,\
    \ too,\nso that e.g. TCP over vxlan push packets will be held in the GRO\nengine\
    \ till the next flush, etc.\n\nJust skip the SKB_GSO_UDP_L4 and SKB_GSO_FRAGLIST\
    \ code path if the\ncurrent packet could land in a UDP tunnel, and let udp_gro_receive()\n\
    do GRO via udp_sk(sk)->gro_receive.\n\nThe check implemented in this patch is\
    \ broader than what is strictly\nneeded, as the existing UDP tunnel could be e.g.\
    \ configured on top of\na different device: we could end-up skipping GRO at-all\
    \ for some packets.\n\nAnyhow, that is a very thin corner case and covering it\
    \ will add quite\na bit of complexity.\n\nv1 -> v2:\n - hopefully clarify the\
    \ commit message"
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: udp:\
    \ omitir la agregaci\xF3n L4 para paquetes de t\xFAnel UDP Si NETIF_F_GRO_FRAGLIST\
    \ o NETIF_F_GRO_UDP_FWD est\xE1n habilitados y hay t\xFAneles UDP disponibles\
    \ en el sistema, udp_gro_receive() podr\xEDa terminar realizando la agregaci\xF3\
    n L4 (ya sea SKB_GSO_UDP_L4 o SKB_GSO_FRAGLIST) en el nivel del t\xFAnel UDP externo\
    \ para paquetes que transportan efectivamente un encabezado de t\xFAnel UDP. Eso\
    \ podr\xEDa causar corrupci\xF3n del protocolo interno. Si, por ejemplo, los paquetes\
    \ relevantes llevan un encabezado vxlan, se ignorar\xE1n/agregar\xE1n diferentes\
    \ ID de vxlan al mismo paquete GSO. Los encabezados internos tambi\xE9n se ignorar\xE1\
    n, de modo que, por ejemplo, los paquetes push TCP sobre vxlan se mantendr\xE1\
    n en el motor GRO hasta el pr\xF3ximo lavado, etc. Simplemente omita la ruta de\
    \ c\xF3digo SKB_GSO_UDP_L4 y SKB_GSO_FRAGLIST si el paquete actual podr\xEDa aterrizar\
    \ en un t\xFAnel UDP, y deje que udp_gro_receive() haga GRO a trav\xE9s de udp_sk(sk)-&gt;gro_receive.\
    \ La verificaci\xF3n implementada en este parche es m\xE1s amplia de lo estrictamente\
    \ necesario, ya que el t\xFAnel UDP existente podr\xEDa configurarse, por ejemplo,\
    \ encima de un dispositivo diferente: podr\xEDamos terminar omitiendo GRO para\
    \ algunos paquetes. De todos modos, se trata de una carcasa de esquina muy delgada\
    \ y cubrirla agregar\xE1 bastante complejidad. v1 -&gt; v2: - con suerte aclarar\
    \ el mensaje de confirmaci\xF3n"
id: CVE-2021-47036
lastModified: '2024-02-28T14:06:45.783'
metrics: {}
published: '2024-02-28T09:15:39.800'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/18f25dc399901426dff61e676ba603ff52c666f7
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/450687386cd16d081b58cd7a342acff370a96078
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
