descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    net/tls: Fix use-after-free after the TLS device goes down and up


    When a netdev with active TLS offload goes down, tls_device_down is

    called to stop the offload and tear down the TLS context. However, the

    socket stays alive, and it still points to the TLS context, which is now

    deallocated. If a netdev goes up, while the connection is still active,

    and the data flow resumes after a number of TCP retransmissions, it will

    lead to a use-after-free of the TLS context.


    This commit addresses this bug by keeping the context alive until its

    normal destruction, and implements the necessary fallbacks, so that the

    connection can resume in software (non-offloaded) kTLS mode.


    On the TX side tls_sw_fallback is used to encrypt all packets. The RX

    side already has all the necessary fallbacks, because receiving

    non-decrypted packets is supported. The thing needed on the RX side is

    to block resync requests, which are normally produced after receiving

    non-decrypted packets.


    The necessary synchronization is implemented for a graceful teardown:

    first the fallbacks are deployed, then the driver resources are released

    (it used to be possible to have a tls_dev_resync after tls_dev_del).


    A new flag called TLS_RX_DEV_DEGRADED is added to indicate the fallback

    mode. It''s used to skip the RX resync logic completely, as it becomes

    useless, and some objects may be released (for example, resync_async,

    which is allocated and freed by the driver).'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net/tls:\
    \ corrige el use-after-free despu\xE9s de que el dispositivo TLS se cae y se enciende.\
    \ Cuando un netdev con descarga TLS activa se cae, se llama a tls_device_down\
    \ para detener la descarga y derribarlo. el contexto TLS. Sin embargo, el socket\
    \ permanece activo y todav\xEDa apunta al contexto TLS, que ahora est\xE1 desasignado.\
    \ Si se activa un netdev, mientras la conexi\xF3n a\xFAn est\xE1 activa, y el\
    \ flujo de datos se reanuda despu\xE9s de varias retransmisiones TCP, se producir\xE1\
    \ un use-after-free del contexto TLS. Esta commit soluciona este error manteniendo\
    \ vivo el contexto hasta su destrucci\xF3n normal e implementa las alternativas\
    \ necesarias para que la conexi\xF3n pueda reanudarse en modo kTLS de software\
    \ (no descargado). En el lado TX, tls_sw_fallback se utiliza para cifrar todos\
    \ los paquetes. El lado RX ya tiene todos los respaldos necesarios, porque se\
    \ admite la recepci\xF3n de paquetes no descifrados. Lo que se necesita en el\
    \ lado RX es bloquear las solicitudes de resincronizaci\xF3n, que normalmente\
    \ se producen despu\xE9s de recibir paquetes no descifrados. Se implementa la\
    \ sincronizaci\xF3n necesaria para un desmontaje elegante: primero se implementan\
    \ los respaldos, luego se liberan los recursos del controlador (antes era posible\
    \ tener un tls_dev_resync despu\xE9s de tls_dev_del). Se agrega una nueva bandera\
    \ llamada TLS_RX_DEV_DEGRADED para indicar el modo de reserva. Se utiliza para\
    \ omitir completamente la l\xF3gica de resincronizaci\xF3n RX, ya que se vuelve\
    \ in\xFAtil y algunos objetos pueden liberarse (por ejemplo, resync_async, que\
    \ el controlador asigna y libera)."
id: CVE-2021-47131
lastModified: '2024-03-17T22:38:29.433'
metrics: {}
published: '2024-03-15T21:15:07.623'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/0f1e6fe66977a864fe850522316f713d7b926fd9
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/c55dcdd435aa6c6ad6ccac0a4c636d010ee367a4
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/f1d4184f128dede82a59a841658ed40d4e6d3aa2
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
