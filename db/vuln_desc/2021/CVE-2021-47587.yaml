cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    net: systemport: Add global locking for descriptor lifecycle


    The descriptor list is a shared resource across all of the transmit queues, and

    the locking mechanism used today only protects concurrency across a given

    transmit queue between the transmit and reclaiming. This creates an opportunity

    for the SYSTEMPORT hardware to work on corrupted descriptors if we have

    multiple producers at once which is the case when using multiple transmit

    queues.


    This was particularly noticeable when using multiple flows/transmit queues and

    it showed up in interesting ways in that UDP packets would get a correct UDP

    header checksum being calculated over an incorrect packet length. Similarly TCP

    packets would get an equally correct checksum computed by the hardware over an

    incorrect packet length.


    The SYSTEMPORT hardware maintains an internal descriptor list that it re-arranges

    when the driver produces a new descriptor anytime it writes to the

    WRITE_PORT_{HI,LO} registers, there is however some delay in the hardware to

    re-organize its descriptors and it is possible that concurrent TX queues

    eventually break this internal allocation scheme to the point where the

    length/status part of the descriptor gets used for an incorrect data buffer.


    The fix is to impose a global serialization for all TX queues in the short

    section where we are writing to the WRITE_PORT_{HI,LO} registers which solves

    the corruption even with multiple concurrent TX queues being used.'
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: net:\
    \ systemport: agregue bloqueo global para el ciclo de vida del descriptor. La\
    \ lista de descriptores es un recurso compartido entre todas las colas de transmisi\xF3\
    n y el mecanismo de bloqueo que se usa hoy solo protege la concurrencia en una\
    \ cola de transmisi\xF3n determinada. entre la transmisi\xF3n y la recuperaci\xF3\
    n. Esto crea una oportunidad para que el hardware de SYSTEMPORT funcione con descriptores\
    \ corruptos si tenemos varios productores a la vez, como es el caso cuando utilizamos\
    \ varias colas de transmisi\xF3n. Esto fue particularmente notable cuando se usaban\
    \ m\xFAltiples flujos/colas de transmisi\xF3n y se mostr\xF3 de manera interesante\
    \ en que los paquetes UDP obtendr\xEDan una suma de verificaci\xF3n de encabezado\
    \ UDP correcta al calcularse sobre una longitud de paquete incorrecta. De manera\
    \ similar, los paquetes TCP obtendr\xEDan una suma de verificaci\xF3n igualmente\
    \ correcta calculada por el hardware en una longitud de paquete incorrecta. El\
    \ hardware de SYSTEMPORT mantiene una lista de descriptores internos que reorganiza\
    \ cuando el controlador produce un nuevo descriptor cada vez que escribe en los\
    \ registros WRITE_PORT_{HI,LO}. Sin embargo, hay cierto retraso en el hardware\
    \ para reorganizar sus descriptores y es Es posible que las colas de TX simult\xE1\
    neas eventualmente rompan este esquema de asignaci\xF3n interna hasta el punto\
    \ en que la parte de longitud/estado del descriptor se use para un b\xFAfer de\
    \ datos incorrecto. La soluci\xF3n es imponer una serializaci\xF3n global para\
    \ todas las colas de TX en la secci\xF3n corta donde escribimos en los registros\
    \ WRITE_PORT_{HI,LO}, lo que resuelve la corrupci\xF3n incluso cuando se utilizan\
    \ varias colas de TX simult\xE1neas."
id: CVE-2021-47587
lastModified: '2024-06-20T12:43:25.663'
metrics: {}
published: '2024-06-19T15:15:53.260'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/595a684fa6f23b21958379a18cfa83862c73c2e1
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/6e1011cd183faae8daff275c72444edcdfe0d473
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/8b8e6e782456f1ce02a7ae914bbd5b1053f0b034
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/8ed2f5d08d6e59f8c78b2869bfb95d0be32c094c
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/c675256a7f131f5ba3f331efb715e8f31ea0e392
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/de57f62f76450b934de8203711bdc4f7953c3421
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/eb4687c7442942e115420a30185f8d83faf37696
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/f3fde37d3f0d429f0fcce214cb52588a9e21260e
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
