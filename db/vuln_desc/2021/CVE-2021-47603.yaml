cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    audit: improve robustness of the audit queue handling


    If the audit daemon were ever to get stuck in a stopped state the

    kernel''s kauditd_thread() could get blocked attempting to send audit

    records to the userspace audit daemon.  With the kernel thread

    blocked it is possible that the audit queue could grow unbounded as

    certain audit record generating events must be exempt from the queue

    limits else the system enter a deadlock state.


    This patch resolves this problem by lowering the kernel thread''s

    socket sending timeout from MAX_SCHEDULE_TIMEOUT to HZ/10 and tweaks

    the kauditd_send_queue() function to better manage the various audit

    queues when connection problems occur between the kernel and the

    audit daemon.  With this patch, the backlog may temporarily grow

    beyond the defined limits when the audit daemon is stopped and the

    system is under heavy audit pressure, but kauditd_thread() will

    continue to make progress and drain the queues as it would for other

    connection problems.  For example, with the audit daemon put into a

    stopped state and the system configured to audit every syscall it

    was still possible to shutdown the system without a kernel panic,

    deadlock, etc.; granted, the system was slow to shutdown but that is

    to be expected given the extreme pressure of recording every syscall.


    The timeout value of HZ/10 was chosen primarily through

    experimentation and this developer''s "gut feeling".  There is likely

    no one perfect value, but as this scenario is limited in scope (root

    privileges would be needed to send SIGSTOP to the audit daemon), it

    is likely not worth exposing this as a tunable at present.  This can

    always be done at a later date if it proves necessary.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: auditor\xED\
    a: mejora la solidez del manejo de la cola de auditor\xEDa. Si el daemon de auditor\xED\
    a alguna vez se atascara en un estado detenido, kauditd_thread() del kernel podr\xED\
    a bloquearse al intentar enviar registros de auditor\xEDa al espacio de usuario.\
    \ daemon de auditor\xEDa. Con el subproceso del n\xFAcleo bloqueado, es posible\
    \ que la cola de auditor\xEDa crezca sin l\xEDmites, ya que ciertos eventos que\
    \ generan registros de auditor\xEDa deben estar exentos de los l\xEDmites de la\
    \ cola, de lo contrario, el sistema entrar\xE1 en un estado de bloqueo. Este parche\
    \ resuelve este problema reduciendo el tiempo de espera de env\xEDo del socket\
    \ del subproceso del n\xFAcleo de MAX_SCHEDULE_TIMEOUT a HZ/10 y modifica la funci\xF3\
    n kauditd_send_queue() para gestionar mejor las distintas colas de auditor\xED\
    a cuando se producen problemas de conexi\xF3n entre el n\xFAcleo y el daemon de\
    \ auditor\xEDa. Con este parche, el trabajo pendiente puede crecer temporalmente\
    \ m\xE1s all\xE1 de los l\xEDmites definidos cuando se detiene el daemon de auditor\xED\
    a y el sistema est\xE1 bajo una fuerte presi\xF3n de auditor\xEDa, pero kauditd_thread()\
    \ continuar\xE1 progresando y drenando las colas como lo har\xEDa con otros problemas\
    \ de conexi\xF3n. Por ejemplo, con el daemon de auditor\xEDa en estado detenido\
    \ y el sistema configurado para auditar cada llamada al sistema, a\xFAn era posible\
    \ apagar el sistema sin p\xE1nico en el kernel, interbloqueo, etc.; Por supuesto,\
    \ el sistema tard\xF3 en cerrarse, pero eso es de esperarse dada la presi\xF3\
    n extrema de registrar cada llamada al sistema. El valor de tiempo de espera de\
    \ HZ/10 se eligi\xF3 principalmente a trav\xE9s de la experimentaci\xF3n y el\
    \ \"instinto\" de este desarrollador. Probablemente no exista un valor perfecto,\
    \ pero como este escenario tiene un alcance limitado (se necesitar\xEDan privilegios\
    \ de root para enviar SIGSTOP al daemon de auditor\xEDa), probablemente no valga\
    \ la pena exponerlo como un ajuste ajustable en este momento. Esto siempre se\
    \ puede hacer en una fecha posterior si resulta necesario."
id: CVE-2021-47603
lastModified: '2024-06-20T12:43:25.663'
metrics: {}
published: '2024-06-19T15:15:54.863'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/0d3277eabd542fb662be23696e5ec9f390d688e1
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/4cc6badff97f74d0fce65f9784b5df3b64e4250b
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/75fdb751f84727d614deea0571a1490c3225d83a
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/8389f50ceb854cb437fefb9330d5024ed3c7c1f5
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/a5f4d17daf2e6cd7c1d9676b476147f6b4ac53f2
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/f4b3ee3c85551d2d343a3ba159304066523f730f
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
