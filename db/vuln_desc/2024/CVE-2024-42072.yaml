configurations:
- nodes:
  - cpeMatch:
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 18FE1EAE-C36C-49FC-A5E0-0A661CDC561E
      versionEndExcluding: '6.9'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 1557DCF8-46D3-4910-8B19-5C77412AB681
      versionEndExcluding: 6.9.8
      versionStartIncluding: 6.9.1
      vulnerable: true
    negate: false
    operator: OR
cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    bpf: Fix may_goto with negative offset.


    Zac''s syzbot crafted a bpf prog that exposed two bugs in may_goto.

    The 1st bug is the way may_goto is patched. When offset is negative

    it should be patched differently.

    The 2nd bug is in the verifier:

    when current state may_goto_depth is equal to visited state may_goto_depth

    it means there is an actual infinite loop. It''s not correct to prune

    exploration of the program at this point.

    Note, that this check doesn''t limit the program to only one may_goto insn,

    since 2nd and any further may_goto will increment may_goto_depth only

    in the queued state pushed for future exploration. The current state

    will have may_goto_depth == 0 regardless of number of may_goto insns

    and the verifier has to explore the program until bpf_exit.'
- lang: es
  value: " En el kernel de Linux se ha resuelto la siguiente vulnerabilidad: bpf:\
    \ corrige may_goto con desplazamiento negativo. El syzbot de Zac cre\xF3 un programa\
    \ bpf que expuso dos errores en may_goto. El primer error es la forma en que se\
    \ parchea may_goto. Cuando el desplazamiento es negativo, se debe parchear de\
    \ manera diferente. El segundo error est\xE1 en el verificador: cuando el estado\
    \ actual may_goto_ Depth es igual al estado visitado may_goto_ Depth, significa\
    \ que hay un bucle infinito real. No es correcto podar la exploraci\xF3n del programa\
    \ en este momento. Tenga en cuenta que esta verificaci\xF3n no limita el programa\
    \ a solo un may_goto insn, ya que el segundo may_goto y cualquier otro may_goto\
    \ incrementar\xE1 may_goto_profundidad solo en el estado en cola enviado para\
    \ exploraci\xF3n futura. El estado actual tendr\xE1 may_goto_ Depth == 0 independientemente\
    \ del n\xFAmero de may_goto insns y el verificador tiene que explorar el programa\
    \ hasta bpf_exit."
id: CVE-2024-42072
lastModified: '2024-07-30T19:01:12.833'
metrics:
  cvssMetricV31:
  - cvssData:
      attackComplexity: LOW
      attackVector: LOCAL
      availabilityImpact: HIGH
      baseScore: 7.8
      baseSeverity: HIGH
      confidentialityImpact: HIGH
      integrityImpact: HIGH
      privilegesRequired: LOW
      scope: UNCHANGED
      userInteraction: NONE
      vectorString: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
      version: '3.1'
    exploitabilityScore: 1.8
    impactScore: 5.9
    source: nvd@nist.gov
    type: Primary
published: '2024-07-29T16:15:06.693'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/175827e04f4be53f3dfb57edf12d0d49b18fd939
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/2b2efe1937ca9f8815884bd4dcd5b32733025103
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Analyzed
weaknesses:
- description:
  - lang: en
    value: NVD-CWE-noinfo
  source: nvd@nist.gov
  type: Primary
