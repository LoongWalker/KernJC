cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    xfs: don''t walk off the end of a directory data block


    This adds sanity checks for xfs_dir2_data_unused and xfs_dir2_data_entry

    to make sure don''t stray beyond valid memory region. Before patching, the

    loop simply checks that the start offset of the dup and dep is within the

    range. So in a crafted image, if last entry is xfs_dir2_data_unused, we

    can change dup->length to dup->length-1 and leave 1 byte of space. In the

    next traversal, this space will be considered as dup or dep. We may

    encounter an out of bound read when accessing the fixed members.


    In the patch, we make sure that the remaining bytes large enough to hold

    an unused entry before accessing xfs_dir2_data_unused and

    xfs_dir2_data_unused is XFS_DIR2_DATA_ALIGN byte aligned. We also make

    sure that the remaining bytes large enough to hold a dirent with a

    single-byte name before accessing xfs_dir2_data_entry.'
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: xfs:\
    \ no salga del final de un bloque de datos de directorio. Esto agrega controles\
    \ de sanitizaci\xF3n para xfs_dir2_data_unused y xfs_dir2_data_entry para asegurarse\
    \ de que no se desv\xEDen m\xE1s all\xE1 de la regi\xF3n de memoria v\xE1lida.\
    \ Antes de parchear, el bucle simplemente verifica que el desplazamiento inicial\
    \ de dup y dep est\xE9 dentro del rango. Entonces, en una imagen manipulada, si\
    \ la \xFAltima entrada es xfs_dir2_data_unused, podemos cambiar dup-&gt;length\
    \ a dup-&gt;length-1 y dejar 1 byte de espacio. En el pr\xF3ximo recorrido, este\
    \ espacio se considerar\xE1 dup o dep. Es posible que nos encontremos con una\
    \ lectura fuera de los l\xEDmites al acceder a los miembros fijos. En el parche,\
    \ nos aseguramos de que los bytes restantes sean lo suficientemente grandes como\
    \ para contener una entrada no utilizada antes de acceder a xfs_dir2_data_unused\
    \ y xfs_dir2_data_unused est\xE9n alineados con los bytes XFS_DIR2_DATA_ALIGN.\
    \ Tambi\xE9n nos aseguramos de que los bytes restantes sean lo suficientemente\
    \ grandes como para contener un directorio con un nombre de un solo byte antes\
    \ de acceder a xfs_dir2_data_entry."
id: CVE-2024-41013
lastModified: '2024-07-29T14:12:08.783'
metrics: {}
published: '2024-07-29T07:15:05.430'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/0c7fcdb6d06cdf8b19b57c17605215b06afa864a
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
