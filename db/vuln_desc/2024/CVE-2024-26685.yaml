cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    nilfs2: fix potential bug in end_buffer_async_write


    According to a syzbot report, end_buffer_async_write(), which handles the

    completion of block device writes, may detect abnormal condition of the

    buffer async_write flag and cause a BUG_ON failure when using nilfs2.


    Nilfs2 itself does not use end_buffer_async_write().  But, the async_write

    flag is now used as a marker by commit 7f42ec394156 ("nilfs2: fix issue

    with race condition of competition between segments for dirty blocks") as

    a means of resolving double list insertion of dirty blocks in

    nilfs_lookup_dirty_data_buffers() and nilfs_lookup_node_buffers() and the

    resulting crash.


    This modification is safe as long as it is used for file data and b-tree

    node blocks where the page caches are independent.  However, it was

    irrelevant and redundant to also introduce async_write for segment summary

    and super root blocks that share buffers with the backing device.  This

    led to the possibility that the BUG_ON check in end_buffer_async_write

    would fail as described above, if independent writebacks of the backing

    device occurred in parallel.


    The use of async_write for segment summary buffers has already been

    removed in a previous change.


    Fix this issue by removing the manipulation of the async_write flag for

    the remaining super root block buffer.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: nilfs2:\
    \ corrige un posible error en end_buffer_async_write Seg\xFAn un informe de syzbot,\
    \ end_buffer_async_write(), que maneja la finalizaci\xF3n de las escrituras del\
    \ dispositivo de bloque, puede detectar una condici\xF3n anormal del indicador\
    \ async_write del b\xFAfer y causar un Error BUG_ON al usar nilfs2. Nilfs2 en\
    \ s\xED no usa end_buffer_async_write(). Pero el indicador async_write ahora se\
    \ usa como marcador en el commit 7f42ec394156 (\"nilfs2: soluciona el problema\
    \ con la condici\xF3n de ejecuci\xF3n de competencia entre segmentos por bloques\
    \ sucios\") como un medio para resolver la inserci\xF3n de lista doble de bloques\
    \ sucios en nilfs_lookup_dirty_data_buffers() y nilfs_lookup_node_buffers( ) y\
    \ el accidente resultante. Esta modificaci\xF3n es segura siempre que se utilice\
    \ para datos de archivos y bloques de nodos de \xE1rbol b donde las cach\xE9s\
    \ de p\xE1ginas sean independientes. Sin embargo, era irrelevante y redundante\
    \ introducir tambi\xE9n async_write para el resumen de segmento y los bloques\
    \ s\xFAper ra\xEDz que comparten buffers con el dispositivo de respaldo. Esto\
    \ gener\xF3 la posibilidad de que la verificaci\xF3n BUG_ON en end_buffer_async_write\
    \ fallara como se describe anteriormente, si se produjeran reescrituras independientes\
    \ del dispositivo de respaldo en paralelo. El uso de async_write para buffers\
    \ de resumen de segmentos ya se elimin\xF3 en un cambio anterior. Solucione este\
    \ problema eliminando la manipulaci\xF3n del indicador async_write para el b\xFA\
    fer de bloque s\xFAper ra\xEDz restante."
id: CVE-2024-26685
lastModified: '2024-06-27T12:15:19.930'
metrics: {}
published: '2024-04-03T15:15:52.210'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/2c3bdba00283a6c7a5b19481a59a730f46063803
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/5bc09b397cbf1221f8a8aacb1152650c9195b02b
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/626daab3811b772086aef1bf8eed3ffe6f523eff
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/6589f0f72f8edd1fa11adce4eedbd3615f2e78ab
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/8fa90634ec3e9cc50f42dd605eec60f2d146ced8
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/c4a09fdac625e64abe478dcf88bfa20406616928
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/d31c8721e816eff5ca6573cc487754f357c093cd
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/f3e4963566f58726d3265a727116a42b591f6596
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://lists.debian.org/debian-lts-announce/2024/06/msg00020.html
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
