cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    mptcp: fix data re-injection from stale subflow


    When the MPTCP PM detects that a subflow is stale, all the packet

    scheduler must re-inject all the mptcp-level unacked data. To avoid

    acquiring unneeded locks, it first try to check if any unacked data

    is present at all in the RTX queue, but such check is currently

    broken, as it uses TCP-specific helper on an MPTCP socket.


    Funnily enough fuzzers and static checkers are happy, as the accessed

    memory still belongs to the mptcp_sock struct, and even from a

    functional perspective the recovery completed successfully, as

    the short-cut test always failed.


    A recent unrelated TCP change - commit d5fed5addb2b ("tcp: reorganize

    tcp_sock fast path variables") - exposed the issue, as the tcp field

    reorganization makes the mptcp code always skip the re-inection.


    Fix the issue dropping the bogus call: we are on a slow path, the early

    optimization proved once again to be evil.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mptcp:\
    \ corrige la reinyecci\xF3n de datos desde un subflujo obsoleto Cuando MPTCP PM\
    \ detecta que un subflujo est\xE1 obsoleto, todo el programador de paquetes debe\
    \ reinyectar todos los datos no codificados del nivel mptcp. Para evitar adquirir\
    \ bloqueos innecesarios, primero intenta verificar si hay datos no bloqueados\
    \ presentes en la cola RTX, pero dicha verificaci\xF3n actualmente no funciona,\
    \ ya que utiliza un asistente espec\xEDfico de TCP en un socket MPTCP. Curiosamente,\
    \ los fuzzers y los comprobadores est\xE1ticos est\xE1n contentos, ya que la memoria\
    \ a la que se accede todav\xEDa pertenece a la estructura mptcp_sock, e incluso\
    \ desde una perspectiva funcional la recuperaci\xF3n se complet\xF3 con \xE9xito,\
    \ ya que la prueba de acceso directo siempre fallaba. Un cambio reciente de TCP\
    \ no relacionado (commit d5fed5addb2b (\"tcp: reorganizar las variables de ruta\
    \ r\xE1pida de tcp_sock\")) expuso el problema, ya que la reorganizaci\xF3n del\
    \ campo tcp hace que el c\xF3digo mptcp siempre omita la reinecci\xF3n. Solucione\
    \ el problema eliminando la llamada falsa: estamos en un camino lento, la optimizaci\xF3\
    n inicial demostr\xF3 una vez m\xE1s ser mala."
id: CVE-2024-26826
lastModified: '2024-04-17T12:48:07.510'
metrics: {}
published: '2024-04-17T10:15:09.183'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/624902eab7abcb8731b333ec73f206d38d839cd8
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/6673d9f1c2cd984390550dbdf7d5ae07b20abbf8
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/6f95120f898b40d13fd441225ef511307853c9c2
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/b609c783c535493aa3fca22c7e40a120370b1ca5
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/b6c620dc43ccb4e802894e54b651cf81495e9598
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
