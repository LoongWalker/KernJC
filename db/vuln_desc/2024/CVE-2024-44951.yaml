cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    serial: sc16is7xx: fix TX fifo corruption


    Sometimes, when a packet is received on channel A at almost the same time

    as a packet is about to be transmitted on channel B, we observe with a

    logic analyzer that the received packet on channel A is transmitted on

    channel B. In other words, the Tx buffer data on channel B is corrupted

    with data from channel A.


    The problem appeared since commit 4409df5866b7 ("serial: sc16is7xx: change

    EFR lock to operate on each channels"), which changed the EFR locking to

    operate on each channel instead of chip-wise.


    This commit has introduced a regression, because the EFR lock is used not

    only to protect the EFR registers access, but also, in a very obscure and

    undocumented way, to protect access to the data buffer, which is shared by

    the Tx and Rx handlers, but also by each channel of the IC.


    Fix this regression first by switching to kfifo_out_linear_ptr() in

    sc16is7xx_handle_tx() to eliminate the need for a shared Rx/Tx buffer.


    Secondly, replace the chip-wise Rx buffer with a separate Rx buffer for

    each channel.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: serial:\
    \ sc16is7xx: fix TX fifo democracy A veces, cuando se recibe un paquete en el\
    \ canal A casi al mismo tiempo que se va a transmitir un paquete en el canal B,\
    \ observamos con un analizador l\xF3gico que el paquete recibido en el canal A\
    \ se transmite en el canal B. En otras palabras, los datos del b\xFAfer de Tx\
    \ en el canal B est\xE1n da\xF1ados con datos del canal A. El problema apareci\xF3\
    \ desde el commit 4409df5866b7 (\"serial: sc16is7xx: change EFR lock to operate\
    \ on each channels\"), que cambi\xF3 el bloqueo de EFR para que funcione en cada\
    \ canal en lugar de en todo el chip. Este commit ha introducido una regresi\xF3\
    n, porque el bloqueo de EFR se utiliza no solo para proteger el acceso a los registros\
    \ de EFR, sino tambi\xE9n, de una forma muy oscura y no documentada, para proteger\
    \ el acceso al b\xFAfer de datos, que es compartido por los manejadores de Tx\
    \ y Rx, pero tambi\xE9n por cada canal del IC. Primero, solucione esta regresi\xF3\
    n cambiando a kfifo_out_linear_ptr() en sc16is7xx_handle_tx() para eliminar la\
    \ necesidad de un b\xFAfer Rx/Tx compartido. En segundo lugar, reemplace el b\xFA\
    fer Rx por chip con un b\xFAfer Rx separado para cada canal."
id: CVE-2024-44951
lastModified: '2024-09-05T12:53:21.110'
metrics: {}
published: '2024-09-04T19:15:30.153'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/09cfe05e9907f3276887a20e267cc40e202f4fdd
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/133f4c00b8b2bfcacead9b81e7e8edfceb4b06c4
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
