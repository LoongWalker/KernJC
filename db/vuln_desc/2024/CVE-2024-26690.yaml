cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    net: stmmac: protect updates of 64-bit statistics counters


    As explained by a comment in <linux/u64_stats_sync.h>, write side of struct

    u64_stats_sync must ensure mutual exclusion, or one seqcount update could

    be lost on 32-bit platforms, thus blocking readers forever. Such lockups

    have been observed in real world after stmmac_xmit() on one CPU raced with

    stmmac_napi_poll_tx() on another CPU.


    To fix the issue without introducing a new lock, split the statics into

    three parts:


    1. fields updated only under the tx queue lock,

    2. fields updated only during NAPI poll,

    3. fields updated only from interrupt context,


    Updates to fields in the first two groups are already serialized through

    other locks. It is sufficient to split the existing struct u64_stats_sync

    so that each group has its own.


    Note that tx_set_ic_bit is updated from both contexts. Split this counter

    so that each context gets its own, and calculate their sum to get the total

    value in stmmac_get_ethtool_stats().


    For the third group, multiple interrupts may be processed by different CPUs

    at the same time, but interrupts on the same CPU will not nest. Move fields

    from this group to a newly created per-cpu struct stmmac_pcpu_stats.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net:\
    \ stmmac: protege las actualizaciones de los contadores de estad\xEDsticas de\
    \ 64 bits. Como se explica en un comentario en , el lado de escritura de la estructura\
    \ u64_stats_sync debe garantizar la exclusi\xF3n mutua, o uno La actualizaci\xF3\
    n de seqcount podr\xEDa perderse en plataformas de 32 bits, bloqueando as\xED\
    \ a los lectores para siempre. Estos bloqueos se han observado en el mundo real\
    \ despu\xE9s de que stmmac_xmit() en una CPU compitiera con stmmac_napi_poll_tx()\
    \ en otra CPU. Para solucionar el problema sin introducir un nuevo bloqueo, divida\
    \ la est\xE1tica en tres partes: 1. campos actualizados solo bajo el bloqueo de\
    \ la cola de transmisi\xF3n, 2. campos actualizados solo durante la encuesta NAPI,\
    \ 3. campos actualizados solo desde el contexto de interrupci\xF3n, Actualizaciones\
    \ de los campos en los dos primeros grupos ya est\xE1n serializados a trav\xE9\
    s de otras cerraduras. Basta con dividir la estructura existente u64_stats_sync\
    \ para que cada grupo tenga el suyo propio. Tenga en cuenta que tx_set_ic_bit\
    \ se actualiza desde ambos contextos. Divida este contador para que cada contexto\
    \ tenga el suyo y calcule su suma para obtener el valor total en stmmac_get_ethtool_stats().\
    \ Para el tercer grupo, diferentes CPU pueden procesar m\xFAltiples interrupciones\
    \ al mismo tiempo, pero las interrupciones en la misma CPU no se anidar\xE1n.\
    \ Mueva los campos de este grupo a una estructura por CPU stmmac_pcpu_stats reci\xE9\
    n creada."
id: CVE-2024-26690
lastModified: '2024-04-03T17:24:18.150'
metrics: {}
published: '2024-04-03T15:15:52.487'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/38cc3c6dcc09dc3a1800b5ec22aef643ca11eab8
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/9680b2ab54ba8d72581100e8c45471306101836e
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/e6af0f082a4b87b99ad033003be2a904a1791b3f
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
