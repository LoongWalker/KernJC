descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    drivers/virt/acrn: fix PFNMAP PTE checks in acrn_vm_ram_map()


    Patch series "mm: follow_pte() improvements and acrn follow_pte() fixes".


    Patch #1 fixes a bunch of issues I spotted in the acrn driver.  It

    compiles, that''s all I know.  I''ll appreciate some review and testing from

    acrn folks.


    Patch #2+#3 improve follow_pte(), passing a VMA instead of the MM, adding

    more sanity checks, and improving the documentation.  Gave it a quick test

    on x86-64 using VM_PAT that ends up using follow_pte().



    This patch (of 3):


    We currently miss handling various cases, resulting in a dangerous

    follow_pte() (previously follow_pfn()) usage.


    (1) We''re not checking PTE write permissions.


    Maybe we should simply always require pte_write() like we do for

    pin_user_pages_fast(FOLL_WRITE)? Hard to tell, so let''s check for

    ACRN_MEM_ACCESS_WRITE for now.


    (2) We''re not rejecting refcounted pages.


    As we are not using MMU notifiers, messing with refcounted pages is

    dangerous and can result in use-after-free. Let''s make sure to reject them.


    (3) We are only looking at the first PTE of a bigger range.


    We only lookup a single PTE, but memmap->len may span a larger area.

    Let''s loop over all involved PTEs and make sure the PFN range is

    actually contiguous. Reject everything else: it couldn''t have worked

    either way, and rather made use access PFNs we shouldn''t be accessing.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drivers/virt/acrn:\
    \ corrige las comprobaciones de PFNMAP PTE en acrn_vm_ram_map() Serie de parches\
    \ \"mm: mejoras en follow_pte() y correcciones en acrn follow_pte()\". El parche\
    \ n.\xBA 1 soluciona varios problemas que detect\xE9 en el controlador acrn. Se\
    \ compila, eso es todo lo que s\xE9. Apreciar\xE9 algunas revisiones y pruebas\
    \ por parte de la gente de acrn. El parche #2+#3 mejora follow_pte(), pasa un\
    \ VMA en lugar del MM, agrega m\xE1s controles de cordura y mejora la documentaci\xF3\
    n. Lo prob\xE9 r\xE1pidamente en x86-64 usando VM_PAT y termin\xF3 usando follow_pte().\
    \ Este parche (de 3): Actualmente no manejamos varios casos, lo que resulta en\
    \ un uso peligroso de follow_pte() (anteriormente follow_pfn()). (1) No estamos\
    \ verificando los permisos de escritura de PTE. \xBFQuiz\xE1s simplemente deber\xED\
    amos requerir siempre pte_write() como lo hacemos para pin_user_pages_fast(FOLL_WRITE)?\
    \ Es dif\xEDcil saberlo, as\xED que busquemos ACRN_MEM_ACCESS_WRITE por ahora.\
    \ (2) No rechazamos p\xE1ginas recontadas. Como no utilizamos notificadores MMU,\
    \ jugar con p\xE1ginas descontadas es peligroso y puede resultar en use-after-free.\
    \ Asegur\xE9monos de rechazarlos. (3) S\xF3lo estamos ante el primer PTE de una\
    \ gama mayor. Solo buscamos una PTE, pero memmap-&gt;len puede abarcar un \xE1\
    rea m\xE1s grande. Recorramos todos los PTE involucrados y asegur\xE9monos de\
    \ que el rango de PFN sea realmente contiguo. Rechace todo lo dem\xE1s: no podr\xED\
    a haber funcionado de ninguna manera, y m\xE1s bien utiliz\xF3 PFN de acceso a\
    \ los que no deber\xEDamos acceder."
id: CVE-2024-38610
lastModified: '2024-06-20T12:43:25.663'
metrics: {}
published: '2024-06-19T14:15:20.893'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/2c8d6e24930b8ef7d4a81787627c559ae0e0d3bb
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/3d6586008f7b638f91f3332602592caa8b00b559
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/4c4ba3cf3a15ccfbaf787d0296fa42cdb00da9b4
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/5c6705aa47b5b78d7ad36fea832bb69caa5bf49a
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/afeb0e69627695f759fc73c39c1640dbf8649b32
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/e873f36ec890bece26ecce850e969917bceebbb6
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
