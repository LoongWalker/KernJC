cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    KEYS: trusted: dcp: fix leak of blob encryption key


    Trusted keys unseal the key blob on load, but keep the sealed payload in

    the blob field so that every subsequent read (export) will simply

    convert this field to hex and send it to userspace.


    With DCP-based trusted keys, we decrypt the blob encryption key (BEK)

    in the Kernel due hardware limitations and then decrypt the blob payload.

    BEK decryption is done in-place which means that the trusted key blob

    field is modified and it consequently holds the BEK in plain text.

    Every subsequent read of that key thus send the plain text BEK instead

    of the encrypted BEK to userspace.


    This issue only occurs when importing a trusted DCP-based key and

    then exporting it again. This should rarely happen as the common use cases

    are to either create a new trusted key and export it, or import a key

    blob and then just use it without exporting it again.


    Fix this by performing BEK decryption and encryption in a dedicated

    buffer. Further always wipe the plain text BEK buffer to prevent leaking

    the key via uninitialized memory.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: KEYS:\
    \ trusted: dcp: fix leak of blob encrypted key Las claves confiables abren el\
    \ blob de la clave al cargar, pero mantienen la carga sellada en el campo blob\
    \ para que cada lectura posterior (exportaci\xF3n) simplemente convierta este\
    \ campo a hexadecimal y lo env\xEDe al espacio de usuario. Con claves confiables\
    \ basadas en DCP, desciframos la clave de cifrado de blob (BEK) en el kernel debido\
    \ a limitaciones de hardware y luego desciframos el payload del blob. El descifrado\
    \ de BEK se realiza en el lugar, lo que significa que el campo blob de la clave\
    \ confiable se modifica y, en consecuencia, contiene la BEK en texto plano. Cada\
    \ lectura posterior de esa clave env\xEDa la BEK en texto plano en lugar de la\
    \ BEK cifrada al espacio de usuario. Este problema solo ocurre cuando se importa\
    \ una clave confiable basada en DCP y luego se vuelve a exportar. Esto rara vez\
    \ deber\xEDa suceder, ya que los casos de uso comunes son crear una nueva clave\
    \ confiable y exportarla, o importar un blob de clave y luego simplemente usarlo\
    \ sin exportarlo nuevamente. Solucione este problema realizando el descifrado\
    \ y cifrado de BEK en un b\xFAfer dedicado. Adem\xE1s, borre siempre el b\xFA\
    fer de BEK de texto plano para evitar la fuga de la clave a trav\xE9s de la memoria\
    \ no inicializada."
id: CVE-2024-45004
lastModified: '2024-09-05T12:53:21.110'
metrics: {}
published: '2024-09-04T20:15:08.890'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/0e28bf61a5f9ab30be3f3b4eafb8d097e39446bb
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/9e3b266afcfe4294e84496f50f006f029d3100db
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
