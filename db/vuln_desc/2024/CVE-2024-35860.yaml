cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    bpf: support deferring bpf_link dealloc to after RCU grace period


    BPF link for some program types is passed as a "context" which can be

    used by those BPF programs to look up additional information. E.g., for

    multi-kprobes and multi-uprobes, link is used to fetch BPF cookie values.


    Because of this runtime dependency, when bpf_link refcnt drops to zero

    there could still be active BPF programs running accessing link data.


    This patch adds generic support to defer bpf_link dealloc callback to

    after RCU GP, if requested. This is done by exposing two different

    deallocation callbacks, one synchronous and one deferred. If deferred

    one is provided, bpf_link_free() will schedule dealloc_deferred()

    callback to happen after RCU GP.


    BPF is using two flavors of RCU: "classic" non-sleepable one and RCU

    tasks trace one. The latter is used when sleepable BPF programs are

    used. bpf_link_free() accommodates that by checking underlying BPF

    program''s sleepable flag, and goes either through normal RCU GP only for

    non-sleepable, or through RCU tasks trace GP *and* then normal RCU GP

    (taking into account rcu_trace_implies_rcu_gp() optimization), if BPF

    program is sleepable.


    We use this for multi-kprobe and multi-uprobe links, which dereference

    link during program run. We also preventively switch raw_tp link to use

    deferred dealloc callback, as upcoming changes in bpf-next tree expose

    raw_tp link data (specifically, cookie value) to BPF program at runtime

    as well.'
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: bpf:\
    \ se admite el aplazamiento de la asignaci\xF3n de bpf_link despu\xE9s del per\xED\
    odo de gracia de RCU. El enlace BPF para algunos tipos de programas se pasa como\
    \ un \"contexto\" que pueden utilizar esos programas BPF para buscar informaci\xF3\
    n adicional. Por ejemplo, para multi-kprobes y multi-uprobes, el enlace se utiliza\
    \ para recuperar valores de cookies BPF. Debido a esta dependencia del tiempo\
    \ de ejecuci\xF3n, cuando bpf_link refcnt cae a cero, todav\xEDa podr\xEDa haber\
    \ programas BPF activos ejecut\xE1ndose y accediendo a los datos del enlace. Este\
    \ parche agrega soporte gen\xE9rico para diferir la devoluci\xF3n de llamada de\
    \ bpf_link dealloc despu\xE9s de RCU GP, si se solicita. Esto se hace exponiendo\
    \ dos devoluciones de llamada de desasignaci\xF3n diferentes, una sincr\xF3nica\
    \ y otra diferida. Si se proporciona uno diferido, bpf_link_free() programar\xE1\
    \ la devoluci\xF3n de llamada de dealloc_deferred() para que se realice despu\xE9\
    s de RCU GP. BPF utiliza dos tipos de RCU: uno \"cl\xE1sico\" que no se puede\
    \ dormir y uno de seguimiento de tareas de RCU. Este \xFAltimo se utiliza cuando\
    \ se utilizan programas BPF que se pueden dormir. bpf_link_free() se adapta a\
    \ eso al verificar el indicador de suspensi\xF3n del programa BPF subyacente,\
    \ y pasa por la GP de RCU normal solo para los no dormidos, o a trav\xE9s de tareas\
    \ de RCU rastrean la GP *y* luego la GP de RCU normal (teniendo en cuenta la optimizaci\xF3\
    n de rcu_trace_implies_rcu_gp()), si El programa BPF se puede dormir. Usamos esto\
    \ para enlaces multi-kprobe y multi-uprobe, que desreferencian el enlace durante\
    \ la ejecuci\xF3n del programa. Tambi\xE9n cambiamos preventivamente el enlace\
    \ raw_tp para usar la devoluci\xF3n de llamada de dealloc diferida, ya que los\
    \ pr\xF3ximos cambios en el \xE1rbol bpf-next tambi\xE9n exponen los datos del\
    \ enlace raw_tp (espec\xEDficamente, el valor de la cookie) al programa BPF en\
    \ tiempo de ejecuci\xF3n."
id: CVE-2024-35860
lastModified: '2024-05-20T13:00:04.957'
metrics: {}
published: '2024-05-19T09:15:07.603'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/1a80dbcb2dbaf6e4c216e62e30fa7d3daa8001ce
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/5d8d447777564b35f67000e7838e7ccb64d525c8
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/876941f533e7b47fc69977fc4551c02f2d18af97
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
