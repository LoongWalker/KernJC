configurations:
- nodes:
  - cpeMatch:
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 0B4EF915-550B-45E5-B2CA-648FEACD60FC
      versionEndExcluding: 4.19.320
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: A8961D98-9ACF-4188-BA88-44038B14BC28
      versionEndExcluding: 5.4.282
      versionStartIncluding: '4.20'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 5CCEDF13-293D-4E64-B501-4409D0365AFE
      versionEndExcluding: 5.10.224
      versionStartIncluding: '5.5'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: B4E2B568-3171-41DE-B519-F2B1A3600D94
      versionEndExcluding: 5.15.165
      versionStartIncluding: '5.11'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 3F3AF3DA-1553-4AB8-97CC-7D0C91E4E23F
      versionEndExcluding: 6.1.106
      versionStartIncluding: '5.16'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: F450D4D2-61CE-4595-B7D1-CA382E2028E9
      versionEndExcluding: 6.6.47
      versionStartIncluding: '6.2'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: C1CDF130-CCA6-47F6-9718-8949BF4E05CC
      versionEndExcluding: 6.10.6
      versionStartIncluding: '6.7'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:6.11:rc1:*:*:*:*:*:*
      matchCriteriaId: 8B3CE743-2126-47A3-8B7C-822B502CF119
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:6.11:rc2:*:*:*:*:*:*
      matchCriteriaId: 4DEB27E7-30AA-45CC-8934-B89263EF3551
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:6.11:rc3:*:*:*:*:*:*
      matchCriteriaId: E0005AEF-856E-47EB-BFE4-90C46899394D
      vulnerable: true
    negate: false
    operator: OR
cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    exec: Fix ToCToU between perm check and set-uid/gid usage


    When opening a file for exec via do_filp_open(), permission checking is

    done against the file''s metadata at that moment, and on success, a file

    pointer is passed back. Much later in the execve() code path, the file

    metadata (specifically mode, uid, and gid) is used to determine if/how

    to set the uid and gid. However, those values may have changed since the

    permissions check, meaning the execution may gain unintended privileges.


    For example, if a file could change permissions from executable and not

    set-id:


    ---------x 1 root root 16048 Aug  7 13:16 target


    to set-id and non-executable:


    ---S------ 1 root root 16048 Aug  7 13:16 target


    it is possible to gain root privileges when execution should have been

    disallowed.


    While this race condition is rare in real-world scenarios, it has been

    observed (and proven exploitable) when package managers are updating

    the setuid bits of installed programs. Such files start with being

    world-executable but then are adjusted to be group-exec with a set-uid

    bit. For example, "chmod o-x,u+s target" makes "target" executable only

    by uid "root" and gid "cdrom", while also becoming setuid-root:


    -rwxr-xr-x 1 root cdrom 16048 Aug  7 13:16 target


    becomes:


    -rwsr-xr-- 1 root cdrom 16048 Aug  7 13:16 target


    But racing the chmod means users without group "cdrom" membership can

    get the permission to execute "target" just before the chmod, and when

    the chmod finishes, the exec reaches brpm_fill_uid(), and performs the

    setuid to root, violating the expressed authorization of "only cdrom

    group members can setuid to root".


    Re-check that we still have execute permissions in case the metadata

    has changed. It would be better to keep a copy from the perm-check time,

    but until we can do that refactoring, the least-bad option is to do a

    full inode_permission() call (under inode lock). It is understood that

    this is safe against dead-locks, but hardly optimal.'
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: exec:\
    \ corrige ToCToU entre la verificaci\xF3n permanente y el uso de set-uid/gid Al\
    \ abrir un archivo para exec a trav\xE9s de do_filp_open(), la verificaci\xF3\
    n de permisos se realiza con los metadatos del archivo en ese momento, y en caso\
    \ de \xE9xito, se devuelve un puntero de archivo. Mucho m\xE1s adelante en la\
    \ ruta del c\xF3digo execve(), los metadatos del archivo (espec\xEDficamente modo,\
    \ uid y gid) se utilizan para determinar si y c\xF3mo configurar uid y gid. Sin\
    \ embargo, es posible que esos valores hayan cambiado desde la verificaci\xF3\
    n de permisos, lo que significa que la ejecuci\xF3n puede obtener privilegios\
    \ no deseados. Por ejemplo, si un archivo pudiera cambiar los permisos de ejecutable\
    \ y no de set-id: ---------x 1 root root 16048 7 de agosto 13:16 destino a set-id\
    \ y no ejecutable: ---S ------ 1 root root 16048 7 de agosto 13:16 target es posible\
    \ obtener privilegios de root cuando la ejecuci\xF3n no deber\xEDa haberse permitido.\
    \ Si bien esta condici\xF3n de ejecuci\xF3n es poco com\xFAn en escenarios del\
    \ mundo real, se ha observado (y se ha demostrado que es explotable) cuando los\
    \ administradores de paquetes actualizan los bits setuid de los programas instalados.\
    \ Dichos archivos comienzan siendo ejecutables mundialmente, pero luego se ajustan\
    \ para que sean ejecutables en grupo con un bit set-uid. Por ejemplo, \"chmod\
    \ ox,u+s target\" hace que \"target\" sea ejecutable s\xF3lo mediante uid \"root\"\
    \ y gid \"cdrom\", y al mismo tiempo se convierte en setuid-root: -rwxr-xr-x 1\
    \ root cdrom 16048 7 de agosto de 13: 16 objetivo se convierte en: -rwsr-xr--\
    \ 1 cdrom ra\xEDz 16048 7 de agosto 13:16 objetivo Pero competir con el chmod\
    \ significa que los usuarios sin membres\xEDa del grupo \"cdrom\" pueden obtener\
    \ permiso para ejecutar \"destino\" justo antes del chmod, y cuando el chmod finaliza,\
    \ el ejecutivo llega a brpm_fill_uid() y realiza el setuid como root, violando\
    \ la autorizaci\xF3n expresa de \"s\xF3lo los miembros del grupo cdrom pueden\
    \ setuid como root\". Vuelva a verificar que todav\xEDa tengamos permisos de ejecuci\xF3\
    n en caso de que los metadatos hayan cambiado. Ser\xEDa mejor conservar una copia\
    \ del momento de verificaci\xF3n permanente, pero hasta que podamos hacer esa\
    \ refactorizaci\xF3n, la opci\xF3n menos mala es hacer una llamada completa a\
    \ inode_permission() (bajo bloqueo de inodo). Se entiende que esto es seguro contra\
    \ bloqueos mutuos, pero no es \xF3ptimo."
id: CVE-2024-43882
lastModified: '2024-09-03T13:25:39.747'
metrics:
  cvssMetricV31:
  - cvssData:
      attackComplexity: HIGH
      attackVector: LOCAL
      availabilityImpact: HIGH
      baseScore: 7.0
      baseSeverity: HIGH
      confidentialityImpact: HIGH
      integrityImpact: HIGH
      privilegesRequired: LOW
      scope: UNCHANGED
      userInteraction: NONE
      vectorString: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H
      version: '3.1'
    exploitabilityScore: 1.0
    impactScore: 5.9
    source: nvd@nist.gov
    type: Primary
published: '2024-08-21T01:15:12.340'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/15469d46ba34559bfe7e3de6659115778c624759
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/368f6985d46657b8b466a421dddcacd4051f7ada
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/90dfbba89ad4f0d9c9744ecbb1adac4aa2ff4f3e
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/9b424c5d4130d56312e2a3be17efb0928fec4d64
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/d2a2a4714d80d09b0f8eb6438ab4224690b7121e
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/d5c3c7e26275a2d83b894d30f7582a42853a958f
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/f50733b45d865f91db90919f8311e2127ce5a0cb
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/f6cfc6bcfd5e1cf76115b6450516ea4c99897ae1
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Analyzed
weaknesses:
- description:
  - lang: en
    value: CWE-367
  source: nvd@nist.gov
  type: Primary
