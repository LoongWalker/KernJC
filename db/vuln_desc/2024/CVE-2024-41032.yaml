cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    mm: vmalloc: check if a hash-index is in cpu_possible_mask


    The problem is that there are systems where cpu_possible_mask has gaps

    between set CPUs, for example SPARC.  In this scenario addr_to_vb_xa()

    hash function can return an index which accesses to not-possible and not

    setup CPU area using per_cpu() macro.  This results in an oops on SPARC.


    A per-cpu vmap_block_queue is also used as hash table, incorrectly

    assuming the cpu_possible_mask has no gaps.  Fix it by adjusting an index

    to a next possible CPU.'
- lang: es
  value: " En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mm:\
    \ vmalloc: comprueba si hay un \xEDndice hash en cpu_possible_mask El problema\
    \ es que hay sistemas donde cpu_possible_mask tiene espacios entre las CPU configuradas,\
    \ por ejemplo SPARC. En este escenario, la funci\xF3n hash addr_to_vb_xa() puede\
    \ devolver un \xEDndice que accede a un \xE1rea de CPU no posible y no configurada\
    \ usando la macro per_cpu(). Esto da como resultado un \xA1Uy en SPARC! Tambi\xE9\
    n se utiliza una vmap_block_queue por CPU como tabla hash, asumiendo incorrectamente\
    \ que cpu_possible_mask no tiene espacios. Solucionarlo ajustando un \xEDndice\
    \ a la siguiente CPU posible."
id: CVE-2024-41032
lastModified: '2024-07-29T16:21:52.517'
metrics: {}
published: '2024-07-29T15:15:11.850'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/28acd531c9a365dac01b32e6bc54aed8c1429bcb
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/47f9b6e49b422392fb0e348a65eb925103ba1882
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/a34acf30b19bc4ee3ba2f1082756ea2604c19138
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
