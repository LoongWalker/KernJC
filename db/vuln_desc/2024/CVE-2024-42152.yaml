configurations:
- nodes:
  - cpeMatch:
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 6A024C9F-1F70-4EB4-B7D0-432011590CAB
      versionEndExcluding: 5.10.222
      versionStartIncluding: '4.8'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: A97DEB09-4927-40F8-B5C6-F5BD5EAE0CFD
      versionEndExcluding: 5.15.163
      versionStartIncluding: '5.11'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: E09E92A5-27EF-40E4-926A-B1CDC8270551
      versionEndExcluding: 6.1.98
      versionStartIncluding: '5.16'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 29E894E4-668F-4DB0-81F7-4FB5F698E970
      versionEndExcluding: 6.6.39
      versionStartIncluding: '6.2'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: ADCC1407-0CB3-4C8F-B4C5-07F682CD7085
      versionEndExcluding: 6.9.9
      versionStartIncluding: '6.7'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:6.10:rc1:*:*:*:*:*:*
      matchCriteriaId: 2EBB4392-5FA6-4DA9-9772-8F9C750109FA
      vulnerable: true
    negate: false
    operator: OR
cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    nvmet: fix a possible leak when destroy a ctrl during qp establishment


    In nvmet_sq_destroy we capture sq->ctrl early and if it is non-NULL we

    know that a ctrl was allocated (in the admin connect request handler)

    and we need to release pending AERs, clear ctrl->sqs and sq->ctrl

    (for nvme-loop primarily), and drop the final reference on the ctrl.


    However, a small window is possible where nvmet_sq_destroy starts (as

    a result of the client giving up and disconnecting) concurrently with

    the nvme admin connect cmd (which may be in an early stage). But *before*

    kill_and_confirm of sq->ref (i.e. the admin connect managed to get an sq

    live reference). In this case, sq->ctrl was allocated however after it was

    captured in a local variable in nvmet_sq_destroy.

    This prevented the final reference drop on the ctrl.


    Solve this by re-capturing the sq->ctrl after all inflight request has

    completed, where for sure sq->ctrl reference is final, and move forward

    based on that.


    This issue was observed in an environment with many hosts connecting

    multiple ctrls simoutanuosly, creating a delay in allocating a ctrl

    leading up to this race window.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: nvmet:\
    \ corrige una posible fuga al destruir un ctrl durante el establecimiento de qp\
    \ En nvmet_sq_destroy capturamos sq-&gt;ctrl temprano y si no es NULL sabemos\
    \ que se asign\xF3 un ctrl (en el controlador de solicitudes de conexi\xF3n de\
    \ administrador) y necesitamos liberar los AER pendientes, borrar ctrl-&gt;sqs\
    \ y sq-&gt;ctrl (principalmente para nvme-loop) y eliminar la referencia final\
    \ en ctrl. Sin embargo, es posible una peque\xF1a ventana donde se inicia nvmet_sq_destroy\
    \ (como resultado de que el cliente se rinde y se desconecta) al mismo tiempo\
    \ que el cmd de conexi\xF3n del administrador de nvme (que puede estar en una\
    \ etapa inicial). Pero *antes* de kill_and_confirm de sq-&gt;ref (es decir, la\
    \ conexi\xF3n del administrador logr\xF3 obtener una referencia en vivo de sq).\
    \ En este caso, se asign\xF3 sq-&gt;ctrl sin embargo despu\xE9s de ser capturado\
    \ en una variable local en nvmet_sq_destroy. Esto evit\xF3 la ca\xEDda de la referencia\
    \ final en Ctrl. Resuelva esto volviendo a capturar sq-&gt;ctrl despu\xE9s de\
    \ que se hayan completado todas las solicitudes en curso, donde con seguridad\
    \ la referencia sq-&gt;ctrl es definitiva, y avance en funci\xF3n de eso. Este\
    \ problema se observ\xF3 en un entorno con muchos hosts que conectaban m\xFAltiples\
    \ controles simult\xE1neamente, lo que creaba un retraso en la asignaci\xF3n de\
    \ un control que conduc\xEDa a esta ventana de ejecuci\xF3n."
id: CVE-2024-42152
lastModified: '2024-08-09T14:55:35.753'
metrics:
  cvssMetricV31:
  - cvssData:
      attackComplexity: HIGH
      attackVector: LOCAL
      availabilityImpact: HIGH
      baseScore: 4.7
      baseSeverity: MEDIUM
      confidentialityImpact: NONE
      integrityImpact: NONE
      privilegesRequired: LOW
      scope: UNCHANGED
      userInteraction: NONE
      vectorString: CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H
      version: '3.1'
    exploitabilityScore: 1.0
    impactScore: 3.6
    source: nvd@nist.gov
    type: Primary
published: '2024-07-30T08:15:06.763'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/2f3c22b1d3d7e86712253244797a651998c141fa
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/5502c1f1d0d7472706cc1f201aecf1c935d302d1
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/818004f2a380420c19872171be716174d4985e33
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/940a71f08ef153ef807f751310b0648d1fa5d0da
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/b4fed1443a6571d49c6ffe7d97af3bbe5ee6dff5
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Patch
  url: https://git.kernel.org/stable/c/c758b77d4a0a0ed3a1292b3fd7a2aeccd1a169a4
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Analyzed
weaknesses:
- description:
  - lang: en
    value: CWE-401
  source: nvd@nist.gov
  type: Primary
