descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    KVM: x86/pmu: Disable support for adaptive PEBS


    Drop support for virtualizing adaptive PEBS, as KVM''s implementation is

    architecturally broken without an obvious/easy path forward, and because

    exposing adaptive PEBS can leak host LBRs to the guest, i.e. can leak

    host kernel addresses to the guest.


    Bug #1 is that KVM doesn''t account for the upper 32 bits of

    IA32_FIXED_CTR_CTRL when (re)programming fixed counters, e.g

    fixed_ctrl_field() drops the upper bits, reprogram_fixed_counters()

    stores local variables as u8s and truncates the upper bits too, etc.


    Bug #2 is that, because KVM _always_ sets precise_ip to a non-zero value

    for PEBS events, perf will _always_ generate an adaptive record, even if

    the guest requested a basic record.  Note, KVM will also enable adaptive

    PEBS in individual *counter*, even if adaptive PEBS isn''t exposed to the

    guest, but this is benign as MSR_PEBS_DATA_CFG is guaranteed to be zero,

    i.e. the guest will only ever see Basic records.


    Bug #3 is in perf.  intel_pmu_disable_fixed() doesn''t clear the upper

    bits either, i.e. leaves ICL_FIXED_0_ADAPTIVE set, and

    intel_pmu_enable_fixed() effectively doesn''t clear ICL_FIXED_0_ADAPTIVE

    either.  I.e. perf _always_ enables ADAPTIVE counters, regardless of what

    KVM requests.


    Bug #4 is that adaptive PEBS *might* effectively bypass event filters set

    by the host, as "Updated Memory Access Info Group" records information

    that might be disallowed by userspace via KVM_SET_PMU_EVENT_FILTER.


    Bug #5 is that KVM doesn''t ensure LBR MSRs hold guest values (or at least

    zeros) when entering a vCPU with adaptive PEBS, which allows the guest

    to read host LBRs, i.e. host RIPs/addresses, by enabling "LBR Entries"

    records.


    Disable adaptive PEBS support as an immediate fix due to the severity of

    the LBR leak in particular, and because fixing all of the bugs will be

    non-trivial, e.g. not suitable for backporting to stable kernels.


    Note!  This will break live migration, but trying to make KVM play nice

    with live migration would be quite complicated, wouldn''t be guaranteed to

    work (i.e. KVM might still kill/confuse the guest), and it''s not clear

    that there are any publicly available VMMs that support adaptive PEBS,

    let alone live migrate VMs that support adaptive PEBS, e.g. QEMU doesn''t

    support PEBS in any capacity.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: KVM:\
    \ x86/pmu: deshabilitar el soporte para PEBS adaptativos. Eliminar el soporte\
    \ para virtualizar PEBS adaptativos, ya que la implementaci\xF3n de KVM tiene\
    \ una arquitectura rota sin un camino obvio/f\xE1cil a seguir, y porque exponer\
    \ PEBS adaptativos puede filtrar los LBR del host al hu\xE9sped, es decir, puede\
    \ filtrar las direcciones del kernel del host al hu\xE9sped. El error n\xFAmero\
    \ 1 es que KVM no tiene en cuenta los 32 bits superiores de IA32_FIXED_CTR_CTRL\
    \ cuando (re)programa contadores fijos, por ejemplo, fix_ctrl_field() elimina\
    \ los bits superiores, reprogram_fixed_counters() almacena variables locales como\
    \ u8 y tambi\xE9n trunca los bits superiores, etc. El error n\xFAmero 2 es que,\
    \ debido a que KVM _siempre_ establece precision_ip en un valor distinto de cero\
    \ para eventos PEBS, perf _siempre_ generar\xE1 un registro adaptativo, incluso\
    \ si el invitado solicit\xF3 un registro b\xE1sico. Tenga en cuenta que KVM tambi\xE9\
    n habilitar\xE1 PEBS adaptativo en *contador* individual, incluso si PEBS adaptativo\
    \ no est\xE1 expuesto al invitado, pero esto es benigno ya que se garantiza que\
    \ MSR_PEBS_DATA_CFG ser\xE1 cero, es decir, el invitado solo ver\xE1 registros\
    \ b\xE1sicos. El error n\xFAmero 3 est\xE1 en rendimiento. intel_pmu_disable_fixed()\
    \ tampoco borra los bits superiores, es decir, deja ICL_FIXED_0_ADAPTIVE configurado,\
    \ e intel_pmu_enable_fixed() efectivamente tampoco borra ICL_FIXED_0_ADAPTIVE.\
    \ Es decir, perf _siempre_ habilita contadores ADAPTIVOS, independientemente de\
    \ lo que solicite KVM. El error n\xFAmero 4 es que los PEBS adaptables *podr\xED\
    an* omitir efectivamente los filtros de eventos establecidos por el host, ya que\
    \ el \"Grupo de informaci\xF3n de acceso a memoria actualizado\" registra informaci\xF3\
    n que podr\xEDa no estar permitida por el espacio de usuario a trav\xE9s de KVM_SET_PMU_EVENT_FILTER.\
    \ El error n\xFAmero 5 es que KVM no garantiza que los MSR LBR mantengan valores\
    \ de invitado (o al menos ceros) al ingresar a una vCPU con PEBS adaptable, lo\
    \ que permite al invitado leer los LBR del host, es decir, los RIP/direcciones\
    \ del host, al habilitar las \"Entradas LBR\". registros. Deshabilite el soporte\
    \ PEBS adaptable como soluci\xF3n inmediata debido a la gravedad de la fuga de\
    \ LBR en particular, y porque corregir todos los errores no ser\xE1 trivial, por\
    \ ejemplo, no es adecuado para realizar backporting a n\xFAcleos estables. \xA1\
    Nota! Esto interrumpir\xE1 la migraci\xF3n en vivo, pero tratar de hacer que KVM\
    \ funcione bien con la migraci\xF3n en vivo ser\xEDa bastante complicado, no se\
    \ garantizar\xEDa que funcione (es decir, KVM a\xFAn podr\xEDa matar/confundir\
    \ al invitado) y no est\xE1 claro si hay alguno disponible p\xFAblicamente. Los\
    \ VMM que admiten PEBS adaptables, y mucho menos migran en vivo las m\xE1quinas\
    \ virtuales que admiten PEBS adaptables; por ejemplo, QEMU no admite PEBS de ninguna\
    \ manera."
id: CVE-2024-26992
lastModified: '2024-05-13T08:15:11.193'
metrics: {}
published: '2024-05-01T06:15:16.957'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/037e48ceccf163899374b601afb6ae8d0bf1d2ac
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/0fb74c00d140a66128afc0003785dcc57e69d312
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/7a7650b3ac23e5fc8c990f00e94f787dc84e3175
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/9e985cbf2942a1bb8fcef9adc2a17d90fd7ca8ee
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
