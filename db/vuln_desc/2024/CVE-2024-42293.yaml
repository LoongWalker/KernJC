cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    arm64: mm: Fix lockless walks with static and dynamic page-table folding


    Lina reports random oopsen originating from the fast GUP code when

    16K pages are used with 4-level page-tables, the fourth level being

    folded at runtime due to lack of LPA2.


    In this configuration, the generic implementation of

    p4d_offset_lockless() will return a ''p4d_t *'' corresponding to the

    ''pgd_t'' allocated on the stack of the caller, gup_fast_pgd_range().

    This is normally fine, but when the fourth level of page-table is folded

    at runtime, pud_offset_lockless() will offset from the address of the

    ''p4d_t'' to calculate the address of the PUD in the same page-table page.

    This results in a stray stack read when the ''p4d_t'' has been allocated

    on the stack and can send the walker into the weeds.


    Fix the problem by providing our own definition of p4d_offset_lockless()

    when CONFIG_PGTABLE_LEVELS <= 4 which returns the real page-table

    pointer rather than the address of the local stack variable.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: arm64:\
    \ mm: corrige recorridos sin bloqueo con plegado de tablas de p\xE1ginas est\xE1\
    ticas y din\xE1micas. Lina informa oopsen aleatorios que se originan en el c\xF3\
    digo GUP r\xE1pido cuando se utilizan p\xE1ginas de 16 KB con tablas de p\xE1\
    ginas de 4 niveles. el cuarto nivel se pliega en tiempo de ejecuci\xF3n debido\
    \ a la falta de LPA2. En esta configuraci\xF3n, la implementaci\xF3n gen\xE9rica\
    \ de p4d_offset_lockless() devolver\xE1 un 'p4d_t *' correspondiente al 'pgd_t'\
    \ asignado en la pila de la persona que llama, gup_fast_pgd_range(). Esto normalmente\
    \ est\xE1 bien, pero cuando el cuarto nivel de la tabla de p\xE1ginas se pliega\
    \ en tiempo de ejecuci\xF3n, pud_offset_lockless() se desplazar\xE1 de la direcci\xF3\
    n de 'p4d_t' para calcular la direcci\xF3n del PUD en la misma p\xE1gina de la\
    \ tabla de p\xE1ginas. Esto da como resultado una lectura de pila perdida cuando\
    \ el 'p4d_t' se ha asignado en la pila y puede enviar al caminante hacia la maleza.\
    \ Solucione el problema proporcionando nuestra propia definici\xF3n de p4d_offset_lockless()\
    \ cuando CONFIG_PGTABLE_LEVELS &lt;= 4, que devuelve el puntero de la tabla de\
    \ p\xE1ginas real en lugar de la direcci\xF3n de la variable de pila local."
id: CVE-2024-42293
lastModified: '2024-08-19T12:59:59.177'
metrics: {}
published: '2024-08-17T09:15:09.867'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/36639013b3462c06ff8e3400a427f775b4fc97f5
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/78672d49d3eebbcda3589f4d6e589caf357c5a59
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
