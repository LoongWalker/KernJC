cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    xdp: use flags field to disambiguate broadcast redirect


    When redirecting a packet using XDP, the bpf_redirect_map() helper will set

    up the redirect destination information in struct bpf_redirect_info (using

    the __bpf_xdp_redirect_map() helper function), and the xdp_do_redirect()

    function will read this information after the XDP program returns and pass

    the frame on to the right redirect destination.


    When using the BPF_F_BROADCAST flag to do multicast redirect to a whole

    map, __bpf_xdp_redirect_map() sets the ''map'' pointer in struct

    bpf_redirect_info to point to the destination map to be broadcast. And

    xdp_do_redirect() reacts to the value of this map pointer to decide whether

    it''s dealing with a broadcast or a single-value redirect. However, if the

    destination map is being destroyed before xdp_do_redirect() is called, the

    map pointer will be cleared out (by bpf_clear_redirect_map()) without

    waiting for any XDP programs to stop running. This causes xdp_do_redirect()

    to think that the redirect was to a single target, but the target pointer

    is also NULL (since broadcast redirects don''t have a single target), so

    this causes a crash when a NULL pointer is passed to dev_map_enqueue().


    To fix this, change xdp_do_redirect() to react directly to the presence of

    the BPF_F_BROADCAST flag in the ''flags'' value in struct bpf_redirect_info

    to disambiguate between a single-target and a broadcast redirect. And only

    read the ''map'' pointer if the broadcast flag is set, aborting if that has

    been cleared out in the meantime. This prevents the crash, while keeping

    the atomic (cmpxchg-based) clearing of the map pointer itself, and without

    adding any more checks in the non-broadcast fast path.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: xdp:\
    \ use el campo flags para eliminar la ambig\xFCedad de la redirecci\xF3n de transmisi\xF3\
    n Al redireccionar un paquete usando XDP, el asistente bpf_redirect_map() configurar\xE1\
    \ la informaci\xF3n del destino de redireccionamiento en la estructura bpf_redirect_info\
    \ (usando el asistente __bpf_xdp_redirect_map() funci\xF3n), y la funci\xF3n xdp_do_redirect()\
    \ leer\xE1 esta informaci\xF3n despu\xE9s de que el programa XDP regrese y pasar\xE1\
    \ el framework al destino de redireccionamiento correcto. Cuando se utiliza el\
    \ indicador BPF_F_BROADCAST para realizar una redirecci\xF3n de multidifusi\xF3\
    n a un mapa completo, __bpf_xdp_redirect_map() establece el puntero 'mapa' en\
    \ la estructura bpf_redirect_info para que apunte al mapa de destino que se va\
    \ a transmitir. Y xdp_do_redirect() reacciona al valor de este puntero de mapa\
    \ para decidir si se trata de una transmisi\xF3n o una redirecci\xF3n de valor\
    \ \xFAnico. Sin embargo, si el mapa de destino se destruye antes de llamar a xdp_do_redirect(),\
    \ el puntero del mapa se borrar\xE1 (mediante bpf_clear_redirect_map()) sin esperar\
    \ a que deje de ejecutarse ning\xFAn programa XDP. Esto hace que xdp_do_redirect()\
    \ piense que la redirecci\xF3n fue a un \xFAnico objetivo, pero el puntero de\
    \ destino tambi\xE9n es NULL (dado que las redirecciones de difusi\xF3n no tienen\
    \ un \xFAnico objetivo), por lo que esto provoca un bloqueo cuando se pasa un\
    \ puntero NULL a dev_map_enqueue( ). Para solucionar este problema, cambie xdp_do_redirect()\
    \ para reaccionar directamente a la presencia del indicador BPF_F_BROADCAST en\
    \ el valor 'flags' en la estructura bpf_redirect_info para eliminar la ambig\xFC\
    edad entre un redireccionamiento de destino \xFAnico y de transmisi\xF3n. Y solo\
    \ lea el puntero del 'mapa' si la bandera de transmisi\xF3n est\xE1 activada,\
    \ abortando si se ha borrado mientras tanto. Esto evita el bloqueo, manteniendo\
    \ al mismo tiempo la limpieza at\xF3mica (basada en cmpxchg) del puntero del mapa\
    \ y sin agregar m\xE1s comprobaciones en la ruta r\xE1pida sin transmisi\xF3n."
id: CVE-2024-36937
lastModified: '2024-05-30T18:18:58.870'
metrics: {}
published: '2024-05-30T16:15:16.797'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/12481f30128fbebc2eeb55eb2d56390fdfa30c5e
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/272bfb019f3cc018f654b992115774e77b4f3ffc
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/5bcf0dcbf9066348058b88a510c57f70f384c92c
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/6fd81f9d333e7b3532036577b1beb74ba1323553
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/e22e25820fa04ea5eaac4ef7ee200e9923f466a4
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
