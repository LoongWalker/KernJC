cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    thermal/debugfs: Add missing count increment to thermal_debug_tz_trip_up()


    The count field in struct trip_stats, representing the number of times

    the zone temperature was above the trip point, needs to be incremented

    in thermal_debug_tz_trip_up(), for two reasons.


    First, if a trip point is crossed on the way up for the first time,

    thermal_debug_update_temp() called from update_temperature() does

    not see it because it has not been added to trips_crossed[] array

    in the thermal zone''s struct tz_debugfs object yet.  Therefore, when

    thermal_debug_tz_trip_up() is called after that, the trip point''s

    count value is 0, and the attempt to divide by it during the average

    temperature computation leads to a divide error which causes the kernel

    to crash.  Setting the count to 1 before the division by incrementing it

    fixes this problem.


    Second, if a trip point is crossed on the way up, but it has been

    crossed on the way up already before, its count value needs to be

    incremented to make a record of the fact that the zone temperature is

    above the trip now.  Without doing that, if the mitigations applied

    after crossing the trip cause the zone temperature to drop below its

    threshold, the count will not be updated for this episode at all and

    the average temperature in the trip statistics record will be somewhat

    higher than it should be.


    Cc :6.8+ <stable@vger.kernel.org> # 6.8+'
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: Thermal/debugfs:\
    \ agregue el incremento de conteo faltante a Thermal_debug_tz_trip_up() El campo\
    \ de conteo en la estructura trip_stats, que representa la cantidad de veces que\
    \ la temperatura de la zona estuvo por encima del punto de disparo, debe incrementarse\
    \ en Thermal_debug_tz_trip_up(), por dos razones. Primero, si se cruza un punto\
    \ de viaje en el camino hacia arriba por primera vez, Thermal_debug_update_temp()\
    \ llamado desde update_temperature() no lo ve porque a\xFAn no se ha agregado\
    \ a la matriz trips_crossed[] en el objeto struct tz_debugfs de la zona t\xE9\
    rmica. Por lo tanto, cuando se llama a Thermal_debug_tz_trip_up() despu\xE9s de\
    \ eso, el valor de conteo del punto de disparo es 0, y el intento de dividirlo\
    \ durante el c\xE1lculo de la temperatura promedio conduce a un error de divisi\xF3\
    n que provoca que el kernel falle. Establecer el conteo en 1 antes de la divisi\xF3\
    n increment\xE1ndolo soluciona este problema. En segundo lugar, si se cruza un\
    \ punto de viaje en el camino hacia arriba, pero ya se ha cruzado en el camino\
    \ hacia arriba, es necesario incrementar su valor de conteo para registrar el\
    \ hecho de que la temperatura de la zona est\xE1 por encima del viaje en este\
    \ momento. Sin hacer eso, si las mitigaciones aplicadas despu\xE9s de cruzar el\
    \ viaje hacen que la temperatura de la zona caiga por debajo de su umbral, el\
    \ conteo no se actualizar\xE1 para este episodio en absoluto y la temperatura\
    \ promedio en el registro de estad\xEDsticas del viaje ser\xE1 algo mayor de lo\
    \ que deber\xEDa ser. . CC :6.8+  # 6.8+"
id: CVE-2024-27006
lastModified: '2024-05-13T08:15:11.740'
metrics: {}
published: '2024-05-01T06:15:19.053'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/9c8215d32e730b597c809a9d2090bf8ec1b79fcf
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/b552f63cd43735048bbe9bfbb7a9dcfce166fbdd
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
