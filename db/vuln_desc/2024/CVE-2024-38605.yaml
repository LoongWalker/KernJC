descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    ALSA: core: Fix NULL module pointer assignment at card init


    The commit 81033c6b584b ("ALSA: core: Warn on empty module")

    introduced a WARN_ON() for a NULL module pointer passed at snd_card

    object creation, and it also wraps the code around it with ''#ifdef

    MODULE''.  This works in most cases, but the devils are always in

    details.  "MODULE" is defined when the target code (i.e. the sound

    core) is built as a module; but this doesn''t mean that the caller is

    also built-in or not.  Namely, when only the sound core is built-in

    (CONFIG_SND=y) while the driver is a module (CONFIG_SND_USB_AUDIO=m),

    the passed module pointer is ignored even if it''s non-NULL, and

    card->module remains as NULL.  This would result in the missing module

    reference up/down at the device open/close, leading to a race with the

    code execution after the module removal.


    For addressing the bug, move the assignment of card->module again out

    of ifdef.  The WARN_ON() is still wrapped with ifdef because the

    module can be really NULL when all sound drivers are built-in.


    Note that we keep ''ifdef MODULE'' for WARN_ON(), otherwise it would

    lead to a false-positive NULL module check.  Admittedly it won''t catch

    perfectly, i.e. no check is performed when CONFIG_SND=y.  But, it''s no

    real problem as it''s only for debugging, and the condition is pretty

    rare.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ALSA:\
    \ n\xFAcleo: corrige la asignaci\xF3n del puntero del m\xF3dulo NULL en el inicio\
    \ de la tarjeta el commit 81033c6b584b (\"ALSA: n\xFAcleo: Advertencia sobre m\xF3\
    dulo vac\xEDo\") introdujo un WARN_ON() para un puntero de m\xF3dulo NULL pasado\
    \ en la creaci\xF3n del objeto snd_card, y tambi\xE9n envuelve el c\xF3digo a\
    \ su alrededor con '#ifdef MODULE'. Esto funciona en la mayor\xEDa de los casos,\
    \ pero los problemas siempre est\xE1n en los detalles. \"M\xD3DULO\" se define\
    \ cuando el c\xF3digo objetivo (es decir, el n\xFAcleo de sonido) se construye\
    \ como un m\xF3dulo; pero esto no significa que la persona que llama tambi\xE9\
    n est\xE9 integrada o no. Es decir, cuando solo el n\xFAcleo de sonido est\xE1\
    \ integrado (CONFIG_SND=y) mientras el controlador es un m\xF3dulo (CONFIG_SND_USB_AUDIO=m),\
    \ el puntero del m\xF3dulo pasado se ignora incluso si no es NULL, y tarjeta-&gt;m\xF3\
    dulo permanece como NULL. Esto dar\xEDa como resultado que la referencia del m\xF3\
    dulo faltante suba o baje en la apertura o cierre del dispositivo, lo que provocar\xED\
    a una ejecuci\xF3n con la ejecuci\xF3n del c\xF3digo despu\xE9s de la eliminaci\xF3\
    n del m\xF3dulo. Para solucionar el error, mueva la asignaci\xF3n de tarjeta-&gt;m\xF3\
    dulo nuevamente fuera de ifdef. WARN_ON() todav\xEDa est\xE1 incluido en ifdef\
    \ porque el m\xF3dulo puede ser realmente NULL cuando todos los controladores\
    \ de sonido est\xE1n integrados. Tenga en cuenta que mantenemos 'ifdef MODULE'\
    \ para WARN_ON(); de lo contrario, se producir\xEDa una verificaci\xF3n de m\xF3\
    dulo NULL falsamente positiva. Es cierto que no se detectar\xE1 perfectamente,\
    \ es decir, no se realiza ninguna verificaci\xF3n cuando CONFIG_SND=y. Pero no\
    \ es un problema real ya que es solo para depurar y la condici\xF3n es bastante\
    \ rara."
id: CVE-2024-38605
lastModified: '2024-06-20T12:43:25.663'
metrics: {}
published: '2024-06-19T14:15:20.443'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/39381fe7394e5eafac76e7e9367e7351138a29c1
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/6b8374ee2cabcf034faa34e69a855dc496a9ec12
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/c935e72139e6d523defd60fe875c01eb1f9ea5c5
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/d7ff29a429b56f04783152ad7bbd7233b740e434
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/e007476725730c1a68387b54b7629486d8a8301e
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/e644036a3e2b2c9b3eee3c61b5d31c2ca8b5ba92
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/e7e0ca200772bdb2fdc6d43d32d341e87a36f811
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
