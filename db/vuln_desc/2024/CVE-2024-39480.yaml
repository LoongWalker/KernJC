configurations:
- nodes:
  - cpeMatch:
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 34445C8D-D7E6-4796-B792-C9257E89257B
      versionEndExcluding: 4.19.316
      versionStartIncluding: '4.19'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 8E2371B0-4787-4038-B526-021D4CF93B31
      versionEndExcluding: 5.4.278
      versionStartIncluding: '5.4'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 5311C980-4CDF-4C10-8875-F04ED0F03398
      versionEndExcluding: 5.10.219
      versionStartIncluding: '5.10'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: E2AB5A01-EFFD-4A24-8CCB-4A016C8C4BB3
      versionEndExcluding: 5.15.161
      versionStartIncluding: '5.15'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: B5A86346-2984-4261-AC12-29EACB186000
      versionEndExcluding: 6.1.94
      versionStartIncluding: '6.1'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: AC0C6E24-8240-425A-BD1A-F78E6D3A67FC
      versionEndExcluding: 6.6.34
      versionStartIncluding: '6.6'
      vulnerable: true
    - criteria: cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*
      matchCriteriaId: 54EDFD02-25E6-4BC8-9AD0-0A59881F400A
      versionEndExcluding: 6.9.5
      versionStartIncluding: '6.9'
      vulnerable: true
    negate: false
    operator: OR
cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    kdb: Fix buffer overflow during tab-complete


    Currently, when the user attempts symbol completion with the Tab key, kdb

    will use strncpy() to insert the completed symbol into the command buffer.

    Unfortunately it passes the size of the source buffer rather than the

    destination to strncpy() with predictably horrible results. Most obviously

    if the command buffer is already full but cp, the cursor position, is in

    the middle of the buffer, then we will write past the end of the supplied

    buffer.


    Fix this by replacing the dubious strncpy() calls with memmove()/memcpy()

    calls plus explicit boundary checks to make sure we have enough space

    before we start moving characters around.'
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: kdb:\
    \ corrige el desbordamiento del b\xFAfer durante la finalizaci\xF3n de tabulaci\xF3\
    n Actualmente, cuando el usuario intenta completar el s\xEDmbolo con la tecla\
    \ Tab, kdb usar\xE1 strncpy() para insertar el s\xEDmbolo completado en el b\xFA\
    fer de comando. Desafortunadamente, pasa el tama\xF1o del b\xFAfer de origen en\
    \ lugar del destino a strncpy() con resultados predeciblemente horribles. Lo m\xE1\
    s obvio es que si el b\xFAfer de comando ya est\xE1 lleno pero cp, la posici\xF3\
    n del cursor, est\xE1 en el medio del b\xFAfer, entonces escribiremos m\xE1s all\xE1\
    \ del final del b\xFAfer proporcionado. Solucione este problema reemplazando las\
    \ dudosas llamadas strncpy() con llamadas memmove()/memcpy() m\xE1s comprobaciones\
    \ expl\xEDcitas de los l\xEDmites para asegurarnos de que tenemos suficiente espacio\
    \ antes de comenzar a mover los personajes."
id: CVE-2024-39480
lastModified: '2024-08-21T08:35:05.157'
metrics:
  cvssMetricV31:
  - cvssData:
      attackComplexity: LOW
      attackVector: LOCAL
      availabilityImpact: HIGH
      baseScore: 7.8
      baseSeverity: HIGH
      confidentialityImpact: HIGH
      integrityImpact: HIGH
      privilegesRequired: LOW
      scope: UNCHANGED
      userInteraction: NONE
      vectorString: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
      version: '3.1'
    exploitabilityScore: 1.8
    impactScore: 5.9
    source: nvd@nist.gov
    type: Primary
  - cvssData:
      attackComplexity: LOW
      attackVector: LOCAL
      availabilityImpact: HIGH
      baseScore: 7.8
      baseSeverity: HIGH
      confidentialityImpact: HIGH
      integrityImpact: HIGH
      privilegesRequired: LOW
      scope: UNCHANGED
      userInteraction: NONE
      vectorString: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
      version: '3.1'
    exploitabilityScore: 1.8
    impactScore: 5.9
    source: 134c704f-9b21-4f2e-91b3-4a467353bcc0
    type: Secondary
published: '2024-07-05T07:15:10.590'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Mailing List
  - Patch
  url: https://git.kernel.org/stable/c/107e825cc448b7834b31e8b1b3cf0f57426d46d5
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Mailing List
  - Patch
  url: https://git.kernel.org/stable/c/33d9c814652b971461d1e30bead6792851c209e7
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Mailing List
  - Patch
  url: https://git.kernel.org/stable/c/cfdc2fa4db57503bc6d3817240547c8ddc55fa96
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Mailing List
  - Patch
  url: https://git.kernel.org/stable/c/ddd2972d8e2dee3b33e8121669d55def59f0be8a
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Mailing List
  - Patch
  url: https://git.kernel.org/stable/c/e9730744bf3af04cda23799029342aa3cddbc454
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Mailing List
  - Patch
  url: https://git.kernel.org/stable/c/f636a40834d22e5e3fc748f060211879c056cd33
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Mailing List
  - Patch
  url: https://git.kernel.org/stable/c/f694da720dcf795dc3eb97bf76d220213f76aaa7
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  tags:
  - Mailing List
  - Patch
  url: https://git.kernel.org/stable/c/fb824a99e148ff272a53d71d84122728b5f00992
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Modified
weaknesses:
- description:
  - lang: en
    value: CWE-120
  source: nvd@nist.gov
  type: Primary
- description:
  - lang: en
    value: CWE-121
  source: 134c704f-9b21-4f2e-91b3-4a467353bcc0
  type: Secondary
