cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    riscv: rewrite __kernel_map_pages() to fix sleeping in invalid context


    __kernel_map_pages() is a debug function which clears the valid bit in page

    table entry for deallocated pages to detect illegal memory accesses to

    freed pages.


    This function set/clear the valid bit using __set_memory(). __set_memory()

    acquires init_mm''s semaphore, and this operation may sleep. This is

    problematic, because  __kernel_map_pages() can be called in atomic context,

    and thus is illegal to sleep. An example warning that this causes:


    BUG: sleeping function called from invalid context at kernel/locking/rwsem.c:1578

    in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 2, name: kthreadd

    preempt_count: 2, expected: 0

    CPU: 0 PID: 2 Comm: kthreadd Not tainted 6.9.0-g1d4c6d784ef6 #37

    Hardware name: riscv-virtio,qemu (DT)

    Call Trace:

    [<ffffffff800060dc>] dump_backtrace+0x1c/0x24

    [<ffffffff8091ef6e>] show_stack+0x2c/0x38

    [<ffffffff8092baf8>] dump_stack_lvl+0x5a/0x72

    [<ffffffff8092bb24>] dump_stack+0x14/0x1c

    [<ffffffff8003b7ac>] __might_resched+0x104/0x10e

    [<ffffffff8003b7f4>] __might_sleep+0x3e/0x62

    [<ffffffff8093276a>] down_write+0x20/0x72

    [<ffffffff8000cf00>] __set_memory+0x82/0x2fa

    [<ffffffff8000d324>] __kernel_map_pages+0x5a/0xd4

    [<ffffffff80196cca>] __alloc_pages_bulk+0x3b2/0x43a

    [<ffffffff8018ee82>] __vmalloc_node_range+0x196/0x6ba

    [<ffffffff80011904>] copy_process+0x72c/0x17ec

    [<ffffffff80012ab4>] kernel_clone+0x60/0x2fe

    [<ffffffff80012f62>] kernel_thread+0x82/0xa0

    [<ffffffff8003552c>] kthreadd+0x14a/0x1be

    [<ffffffff809357de>] ret_from_fork+0xe/0x1c


    Rewrite this function with apply_to_existing_page_range(). It is fine to

    not have any locking, because __kernel_map_pages() works with pages being

    allocated/deallocated and those pages are not changed by anyone else in the

    meantime.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: riscv:\
    \ reescribe __kernel_map_pages() para arreglar el modo de dormir en un contexto\
    \ no v\xE1lido. __kernel_map_pages() es una funci\xF3n de depuraci\xF3n que borra\
    \ el bit v\xE1lido en la entrada de la tabla de p\xE1ginas para p\xE1ginas designadas\
    \ para detectar accesos ilegales a la memoria de las p\xE1ginas liberadas. Esta\
    \ funci\xF3n establece/borra el bit v\xE1lido usando __set_memory(). __set_memory()\
    \ adquiere el sem\xE1foro de init_mm y esta operaci\xF3n puede suspenderse. Esto\
    \ es problem\xE1tico, porque __kernel_map_pages() se puede llamar en un contexto\
    \ at\xF3mico y, por lo tanto, es ilegal dormir. Un ejemplo de advertencia de que\
    \ esto causa: ERROR: funci\xF3n inactiva llamada desde un contexto no v\xE1lido\
    \ en kernel/locking/rwsem.c:1578 in_atomic(): 1, irqs_disabled(): 0, non_block:\
    \ 0, pid: 2, nombre: kthreadd preempt_count: 2, esperado: 0 CPU: 0 PID: 2 Comm:\
    \ kthreadd No contaminado 6.9.0-g1d4c6d784ef6 #37 Nombre de hardware: riscv-virtio,qemu\
    \ (DT) Seguimiento de llamadas: [] dump_backtrace+0x1c/0x24 [] show_stack+0x2c/0x38\
    \ [] dump_stack_lvl+0x5a/0x72 [] dump_stack+0x14/0x1c [] __might_resched+0x104/0x10e\
    \ [] __might_sleep+0x3e/0x62 [] down_write+0x20/0x72 [] __set_memory+0x82/0x2fa\
    \ [] __kernel_map_pages+0x5a/0xd4 [] __alloc_pages_bulk+0x3b2/0x43a [] __vmalloc_node_range+0x196/0x6ba\
    \ [] copy_process+0x72c/0x17ec [] kernel_clone+0x60/0x2fe [] kernel_thread+0x82/0xa0\
    \ [] kthreadd+0x14a/0x1be [] _from_fork+0xe/0x1c Reescribe esta funci\xF3n con\
    \ apply_to_existing_page_range(). Est\xE1 bien no tener ning\xFAn bloqueo, porque\
    \ __kernel_map_pages() funciona con p\xE1ginas que se asignan/desasignan y, mientras\
    \ tanto, nadie m\xE1s cambia esas p\xE1ginas."
id: CVE-2024-40915
lastModified: '2024-07-12T16:34:58.687'
metrics: {}
published: '2024-07-12T13:15:14.660'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/8661a7af04991201640863ad1a0983173f84b5eb
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/919f8626099d9909b9a9620b05e8c8ab06581876
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/d5257ceb19d92069195254866421f425aea42915
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/fb1cf0878328fe75d47f0aed0a65b30126fcefc4
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
