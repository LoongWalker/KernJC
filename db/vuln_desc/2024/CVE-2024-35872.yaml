cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    mm/secretmem: fix GUP-fast succeeding on secretmem folios


    folio_is_secretmem() currently relies on secretmem folios being LRU

    folios, to save some cycles.


    However, folios might reside in a folio batch without the LRU flag set, or

    temporarily have their LRU flag cleared.  Consequently, the LRU flag is

    unreliable for this purpose.


    In particular, this is the case when secretmem_fault() allocates a fresh

    page and calls filemap_add_folio()->folio_add_lru().  The folio might be

    added to the per-cpu folio batch and won''t get the LRU flag set until the

    batch was drained using e.g., lru_add_drain().


    Consequently, folio_is_secretmem() might not detect secretmem folios and

    GUP-fast can succeed in grabbing a secretmem folio, crashing the kernel

    when we would later try reading/writing to the folio, because the folio

    has been unmapped from the directmap.


    Fix it by removing that unreliable check.'
- lang: es
  value: " En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: mm/secretmem:\
    \ corrige el \xE9xito r\xE1pido de GUP en folios secretmem folio_is_secretmem()\
    \ actualmente depende de que los folios secretmem sean folios LRU, para guardar\
    \ algunos ciclos. Sin embargo, las publicaciones pueden residir en un lote de\
    \ publicaciones sin el indicador LRU establecido o tener su indicador LRU borrado\
    \ temporalmente. En consecuencia, la bandera LRU no es fiable para este fin. En\
    \ particular, este es el caso cuando secretmem_fault() asigna una p\xE1gina nueva\
    \ y llama a filemap_add_folio()-&gt;folio_add_lru(). La publicaci\xF3n podr\xED\
    a agregarse al lote de publicaciones por CPU y no se establecer\xE1 el indicador\
    \ LRU hasta que el lote se drene usando, por ejemplo, lru_add_drain(). En consecuencia,\
    \ es posible que folio_is_secretmem() no detecte folios secretmem y GUP-fast puede\
    \ lograr capturar un folio secretmem, bloqueando el kernel cuando m\xE1s tarde\
    \ intentemos leer/escribir en el folio, porque el folio no se ha desasignado del\
    \ mapa directo. Solucionarlo eliminando ese cheque poco confiable."
id: CVE-2024-35872
lastModified: '2024-05-20T13:00:04.957'
metrics: {}
published: '2024-05-19T09:15:08.600'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/201e4aaf405dfd1308da54448654053004c579b5
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/43fad1d0284de30159661d0badfc3cbaf7e6f8f8
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/65291dcfcf8936e1b23cfd7718fdfde7cfaf7706
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/6564b014af92b677c1f07c44d7f5b595d589cf6e
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/9c2b4b657739ecda38e3b383354a29566955ac48
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
