cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    vfio/platform: Create persistent IRQ handlers


    The vfio-platform SET_IRQS ioctl currently allows loopback triggering of

    an interrupt before a signaling eventfd has been configured by the user,

    which thereby allows a NULL pointer dereference.


    Rather than register the IRQ relative to a valid trigger, register all

    IRQs in a disabled state in the device open path.  This allows mask

    operations on the IRQ to nest within the overall enable state governed

    by a valid eventfd signal.  This decouples @masked, protected by the

    @locked spinlock from @trigger, protected via the @igate mutex.


    In doing so, it''s guaranteed that changes to @trigger cannot race the

    IRQ handlers because the IRQ handler is synchronously disabled before

    modifying the trigger, and loopback triggering of the IRQ via ioctl is

    safe due to serialization with trigger changes via igate.


    For compatibility, request_irq() failures are maintained to be local to

    the SET_IRQS ioctl rather than a fatal error in the open device path.

    This allows, for example, a userspace driver with polling mode support

    to continue to work regardless of moving the request_irq() call site.

    This necessarily blocks all SET_IRQS access to the failed index.'
- lang: es
  value: "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: vfio/plataforma:\
    \ cree controladores IRQ persistentes. La plataforma vfio SET_IRQS ioctl actualmente\
    \ permite la activaci\xF3n de bucle invertido de una interrupci\xF3n antes de\
    \ que el usuario haya configurado un evento de se\xF1alizaci\xF3n, lo que permite\
    \ un puntero NULL. desreferencia. En lugar de registrar la IRQ relativa a un activador\
    \ v\xE1lido, registre todas las IRQ en estado deshabilitado en la ruta abierta\
    \ del dispositivo. Esto permite que las operaciones de m\xE1scara en la IRQ se\
    \ aniden dentro del estado de habilitaci\xF3n general gobernado por una se\xF1\
    al eventfd v\xE1lida. Esto desacopla a @masked, protegido por el spinlock @locked\
    \ de @trigger, protegido a trav\xE9s del mutex @igate. Al hacerlo, se garantiza\
    \ que los cambios en @trigger no puedan competir con los controladores IRQ porque\
    \ el controlador IRQ se desactiva sincr\xF3nicamente antes de modificar el disparador,\
    \ y la activaci\xF3n en bucle invertido de la IRQ a trav\xE9s de ioctl es segura\
    \ debido a la serializaci\xF3n con cambios en el disparador a trav\xE9s de igate.\
    \ Por compatibilidad, las fallas de request_irq() se mantienen locales para el\
    \ ioctl SET_IRQS en lugar de un error fatal en la ruta abierta del dispositivo.\
    \ Esto permite, por ejemplo, que un controlador de espacio de usuario compatible\
    \ con el modo de sondeo contin\xFAe funcionando independientemente de mover el\
    \ sitio de llamada request_irq(). Esto necesariamente bloquea todo el acceso SET_IRQS\
    \ al \xEDndice fallido."
id: CVE-2024-26813
lastModified: '2024-06-25T22:15:23.350'
metrics: {}
published: '2024-04-05T09:15:09.340'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/07afdfd8a68f9eea8db0ddc4626c874f29d2ac5e
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/09452c8fcbd7817c06e8e3212d99b45917e603a5
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/0f8d8f9c2173a541812dd750529f4a415117eb29
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/62d4e43a569b67929eb3319780be5359694c8086
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/675daf435e9f8e5a5eab140a9864dfad6668b375
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/7932db06c82c5b2f42a4d1a849d97dba9ce4a362
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/cc5838f19d39a5fef04c468199699d2a4578be3a
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/d6bedd6acc0bcb1e7e010bc046032e47f08d379f
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://lists.debian.org/debian-lts-announce/2024/06/msg00017.html
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
