descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    usb: gadget: uvc: use correct buffer size when parsing configfs lists


    This commit fixes uvc gadget support on 32-bit platforms.


    Commit 0df28607c5cb ("usb: gadget: uvc: Generalise helper functions for

    reuse") introduced a helper function __uvcg_iter_item_entries() to aid

    with parsing lists of items on configfs attributes stores. This function

    is a generalization of another very similar function, which used a

    stack-allocated temporary buffer of fixed size for each item in the list

    and used the sizeof() operator to check for potential buffer overruns.

    The new function was changed to allocate the now variably sized temp

    buffer on heap, but wasn''t properly updated to also check for max buffer

    size using the computed size instead of sizeof() operator.


    As a result, the maximum item size was 7 (plus null terminator) on

    64-bit platforms, and 3 on 32-bit ones. While 7 is accidentally just

    barely enough, 3 is definitely too small for some of UVC configfs

    attributes. For example, dwFrameInteval, specified in 100ns units,

    usually has 6-digit item values, e.g. 166666 for 60fps.'
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: usb:\
    \ gadget: uvc: use el tama\xF1o de b\xFAfer correcto al analizar listas de configfs.\
    \ Este commit corrige la compatibilidad con gadgets uvc en plataformas de 32 bits.\
    \ El commit 0df28607c5cb (\"usb: gadget: uvc: Generalizar funciones auxiliares\
    \ para su reutilizaci\xF3n\") introdujo una funci\xF3n auxiliar __uvcg_iter_item_entries()\
    \ para ayudar con el an\xE1lisis de listas de elementos en las tiendas de atributos\
    \ de configfs. Esta funci\xF3n es una generalizaci\xF3n de otra funci\xF3n muy\
    \ similar, que utilizaba un b\xFAfer temporal de tama\xF1o fijo asignado por la\
    \ pila para cada elemento de la lista y utilizaba el operador sizeof() para comprobar\
    \ posibles desbordamientos del b\xFAfer. La nueva funci\xF3n se cambi\xF3 para\
    \ asignar el b\xFAfer temporal ahora de tama\xF1o variable en el mont\xF3n, pero\
    \ no se actualiz\xF3 correctamente para verificar tambi\xE9n el tama\xF1o m\xE1\
    ximo del b\xFAfer usando el tama\xF1o calculado en lugar del operador sizeof().\
    \ Como resultado, el tama\xF1o m\xE1ximo de elemento fue 7 (m\xE1s terminador\
    \ nulo) en plataformas de 64 bits y 3 en plataformas de 32 bits. Si bien 7 accidentalmente\
    \ es apenas suficiente, 3 es definitivamente demasiado peque\xF1o para algunos\
    \ de los atributos de configuraci\xF3n de UVC. Por ejemplo, dwFrameInteval, especificado\
    \ en unidades de 100 ns, normalmente tiene valores de elementos de 6 d\xEDgitos,\
    \ por ejemplo, 166666 para 60 fps."
id: CVE-2024-36895
lastModified: '2024-05-30T18:18:58.870'
metrics: {}
published: '2024-05-30T16:15:12.937'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/650ae71c80749fc7cb8858c8049f532eaec64410
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/7a54e5052bde582fd0e7677334fe7a5be92e242c
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/a422089ce42ced73713e5032aad29a9a7cbe9528
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
