cveTags: []
descriptions:
- lang: en
  value: 'In the Linux kernel, the following vulnerability has been resolved:


    net: tls, fix WARNIING in __sk_msg_free


    A splice with MSG_SPLICE_PAGES will cause tls code to use the

    tls_sw_sendmsg_splice path in the TLS sendmsg code to move the user

    provided pages from the msg into the msg_pl. This will loop over the

    msg until msg_pl is full, checked by sk_msg_full(msg_pl). The user

    can also set the MORE flag to hint stack to delay sending until receiving

    more pages and ideally a full buffer.


    If the user adds more pages to the msg than can fit in the msg_pl

    scatterlist (MAX_MSG_FRAGS) we should ignore the MORE flag and send

    the buffer anyways.


    What actually happens though is we abort the msg to msg_pl scatterlist

    setup and then because we forget to set ''full record'' indicating we

    can no longer consume data without a send we fallthrough to the ''continue''

    path which will check if msg_data_left(msg) has more bytes to send and

    then attempts to fit them in the already full msg_pl. Then next

    iteration of sender doing send will encounter a full msg_pl and throw

    the warning in the syzbot report.


    To fix simply check if we have a full_record in splice code path and

    if not send the msg regardless of MORE flag.'
- lang: es
  value: "En el kernel de Linux, se resolvi\xF3 la siguiente vulnerabilidad: net:\
    \ tls, corrija la ADVERTENCIA en __sk_msg_free Un empalme con MSG_SPLICE_PAGES\
    \ har\xE1 que el c\xF3digo tls use la ruta tls_sw_sendmsg_splice en el c\xF3digo\
    \ TLS sendmsg para mover las p\xE1ginas proporcionadas por el usuario del msg\
    \ al msg_pl . Esto recorrer\xE1 el mensaje hasta que msg_pl est\xE9 lleno, verificado\
    \ por sk_msg_full(msg_pl). El usuario tambi\xE9n puede configurar el indicador\
    \ MORE para que la pila de sugerencias retrase el env\xEDo hasta recibir m\xE1\
    s p\xE1ginas e idealmente un b\xFAfer completo. Si el usuario agrega m\xE1s p\xE1\
    ginas al mensaje de las que caben en la lista de dispersi\xF3n msg_pl (MAX_MSG_FRAGS),\
    \ debemos ignorar el indicador M\xC1S y enviar el b\xFAfer de todos modos. Sin\
    \ embargo, lo que realmente sucede es que abortamos la configuraci\xF3n de la\
    \ lista de dispersi\xF3n de msg a msg_pl y luego, como nos olvidamos de configurar\
    \ el 'registro completo', lo que indica que ya no podemos consumir datos sin un\
    \ env\xEDo, pasamos a la ruta 'continuar' que verificar\xE1 si msg_data_left(msg)\
    \ tiene m\xE1s bytes para enviar y luego intenta incluirlos en el msg_pl que ya\
    \ est\xE1 completo. Luego, la pr\xF3xima iteraci\xF3n del remitente que realiza\
    \ el env\xEDo encontrar\xE1 un msg_pl completo y arrojar\xE1 la advertencia en\
    \ el informe syzbot. Para solucionarlo, simplemente verifique si tenemos un registro\
    \ completo en la ruta del c\xF3digo de empalme y, si no, env\xEDe el mensaje independientemente\
    \ del indicador MORE."
id: CVE-2024-35841
lastModified: '2024-05-17T18:35:35.070'
metrics: {}
published: '2024-05-17T15:15:21.160'
references:
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/02e368eb1444a4af649b73cbe2edd51780511d86
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/294e7ea85f34748f04e5f3f9dba6f6b911d31aa8
- source: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
  url: https://git.kernel.org/stable/c/dc9dfc8dc629e42f2234e3327b75324ffc752bc9
sourceIdentifier: 416baaa9-dc9f-4396-8d5f-8c081fb06d67
vulnStatus: Awaiting Analysis
